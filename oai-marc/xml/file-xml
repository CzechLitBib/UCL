#!/usr/bin/python3
#
# XML / MARC parsing
#

import traceback,requests,lxml.html,time,sys,os,io,re

from pymarc import marcxml,Leader,Field,MARCWriter,MARCReader,XMLWriter
from pymarc.record import Record

# ------------------------------------------------------
# VAR
# ------------------------------------------------------

DATA='CLO-2022-09-03.mrc'

xml = XMLWriter(open('CLO_PNP_2022_12.xml', 'wb'))
reader = MARCReader(open(DATA,'rb'))
#writer = MARCWriter(open('hnl_fix.mrc', 'wb'))

for record in reader:

	record.remove_fields('LDR')# LDR dup

	tags = [F.tag for F in record.fields]

	for T in tags:
		if T not in ['001', '046', '100', '368', '370', '372', '400', '678']:
			record.remove_fields(T)

	xml.write(record)

#	record.force_utf8 = True
#	writer.write(record)

	#print(record)
	#sys.exit(1)

reader.close()
xml.close()

sys.exit(1)

#f = open('history.dat', 'w')

# ------------------------------------------------------
# DEF
# ------------------------------------------------------

def validate(record):

	metadata = record

#	metadata.remove_fields('LDR')# LDR dup
#	metadata.add_ordered_field(Field(tag='964', indicators=[' ',' '], subfields=['a', 'HunNatLib']))

#	xml.write(metadata)


	if 'VER' in metadata:
		print(record)
		sys.exit(1)
	
	return

	for F in metadata.get_fields('KAT'):
		print(F['a'])

	return

	#metadata.remove_fields('LDR')# LDR dup

	#if '001' in metadata:
	#	ident = metadata['001'].value()
	
#	if '008' in metadata:
#		f.write(metadata['008'].value()[0:6] + ' ' + metadata['008'].value()[7:11] + '\n')


#	if metadata:
#		metadata.remove_fields('LDR')# LDR dup

#		if '001' in metadata:
#			ident = metadata['001'].value()
	
#		print('####   ' + ident + '   #####')  

#		metadata.force_utf8 = True

#		print(metadata)
		#print(metadata.leader[9])
#		writer.write(metadata)
	#	for F in metadata.fields:
	#		try:
	#			print(F.__str__().encode('latin-1'))
	#		except:
	#			pass
	return

	#if '001' in metadata:
	#	ident = metadata['001'].value()
	
	#if 'FMT' in metadata:
	#	metadata.add_ordered_field(Field(tag='990', indicators=[' ',' '], subfields=['a', metadata['FMT'].value()]))
	#	metadata.remove_fields('FMT')

	#if 'LKR' in metadata:
	#	metadata.add_ordered_field(Field(tag='994', indicators=[' ',' '], subfields=metadata['LKR'].subfields))
	#	metadata.remove_fields('LKR')

	#writer.write(metadata)

	return

	if '001' in metadata:
		ident = metadata['001'].value()
	else:
		return

	# CLB / ECS / ECR filter
	for F in metadata.get_fields('599'):
		if 'a' in F and F['a'] == 'CLB-CPK': break
	else:
		for F in metadata.get_fields('964'):
			if 'a' in F and F['a'] in ['ECS', 'ECR']: break
		else: return

	if len(metadata.get_fields('964')) > 1:
		print(ident)
	
	return

	# CLO FIX

	# remove LDR dup
	#record.remove_fields('LDR')

# ------------------------------------------------------
# MAIN
# ------------------------------------------------------

#record = Record()

#record.leader = '     nam a22     4i 4500'
#field = Field(tag = '001', data='002524717')
#record.add_ordered_field(field)

#field = Field(tag = '700', indicators = [' ',' '], subfields = ['a', 'Xoo','4','ctb'])
#record.add_ordered_field(field)
#field = Field(tag = '100', indicators = [' ',' '], subfields = ['a', 'Xoo'])
#record.add_ordered_field(field)
#field = Field(tag = '245', indicators = [' ',' '], subfields = ['c', '<<boo>>df f  <<Foo>>'])
#record.add_ordered_field(field)
#field = Field(tag = '505', indicators = [' ',' '], subfields = ['a', '<<Boo>>df f  <<[foo>>'])
#record.add_ordered_field(field)

#validate(record)

marcxml.map_xml(validate, DATA)

#with open('encoding.txt', 'r') as f:
#	for I in f.read().splitlines():
#		marcxml.map_xml(validate, 'xml/' + I + '.xml')

#aleph.close()
#xml.close()
#writer.close()
#f.close()

# EXIT -------------------

sys.exit(0)

