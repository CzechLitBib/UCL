#!/usr/bin/python3
#
# Create Devel DB 
#

import sqlite3

DB='devel.db'
ERR='/var/www/html/error/error.db'

con = sqlite3.connect(DB)
cur = con.cursor()

# error | user

cur.execute("CREATE TABLE daily (timestamp INTEGER, ident TEXT, user TEXT, tag TEXT, code TEXT);")
cur.execute("CREATE TABLE weekly (timestamp INTEGER, ident TEXT, user TEXT, tag TEXT, code TEXT);")
cur.execute("CREATE TABLE error (code TEXT, label TEXT, text TEXT);")
cur.execute("CREATE TABLE country (code TEXT);")
cur.execute("CREATE TABLE language (code TEXT);")
cur.execute("CREATE TABLE role (code TEXT);")
cur.execute("CREATE TABLE review (authority TEXT, name TEXT);")
cur.execute("CREATE TABLE user (code TEXT, aleph TEXT, email TEXT);")
cur.execute("CREATE TABLE exception (ident TEXT, code TEXT);")
cur.execute("CREATE TABLE dict_26XA (value TEXT);")
cur.execute("CREATE TABLE dict_26XB (value TEXT);")
cur.execute("CREATE TABLE dict_490 (value TEXT);")
cur.execute("CREATE TABLE dict_773 (value TEXT);")
cur.execute("CREATE TABLE dict_336 (value TEXT);")
cur.execute("CREATE TABLE dict_337 (value TEXT);")
cur.execute("CREATE TABLE dict_338 (value TEXT);")

cur.execute("CREATE INDEX 'daily_timestamp' ON daily (timestamp);")
cur.execute("CREATE INDEX 'weekly_timestamp' ON weekly (timestamp);")
cur.execute("CREATE UNIQUE INDEX 'exception_ident' ON exception (ident);")
cur.execute("CREATE UNIQUE INDEX 'error_code' ON error (code);")
cur.execute("CREATE UNIQUE INDEX 'country_code' ON country (code);")
cur.execute("CREATE UNIQUE INDEX 'language_code' ON language (code);")
cur.execute("CREATE UNIQUE INDEX 'role_code' ON role (code);")
cur.execute("CREATE UNIQUE INDEX 'authority' ON review (authority);")
cur.execute("CREATE UNIQUE INDEX 'user_code' ON user (code);")
cur.execute("CREATE UNIQUE INDEX '26XA_value' ON dict_26XA (value);")
cur.execute("CREATE UNIQUE INDEX '26XB_value' ON dict_26XB (value);")
cur.execute("CREATE UNIQUE INDEX '490_value' ON dict_490 (value);")
cur.execute("CREATE UNIQUE INDEX '773_value' ON dict_773 (value);")
cur.execute("CREATE UNIQUE INDEX '336_value' ON dict_336 (value);")
cur.execute("CREATE UNIQUE INDEX '337_value' ON dict_337 (value);")
cur.execute("CREATE UNIQUE INDEX '338_value' ON dict_338 (value);")

with open('/usr/local/bin/code/country.txt', 'r') as f:
	for line in f:
		cur.execute("INSERT INTO country VALUES (?);", (line.strip(),))

with open('/usr/local/bin/code/lang.txt', 'r') as f:
	for line in f:
		cur.execute("INSERT INTO language VALUES (?);", (line.strip(),))

with open('/usr/local/bin/code/role.txt', 'r') as f:
	for line in f:
		cur.execute("INSERT INTO role VALUES (?);", (line.strip(),))

with open('/usr/local/bin/code/recenze.txt', 'r') as f:
	for line in f:
		name,aut = line.split('#')
		cur.execute("INSERT INTO review VALUES (?,?);", (aut.strip(),name.strip()))

with open('/usr/local/bin/code/sif.txt', 'r') as f:
	for line in f:
		sif,mail = line.split(':')
		cur.execute("INSERT INTO user (code, email) VALUES (?,?) ON CONFLICT (code) DO UPDATE SET email=excluded.email;", (sif.strip(), mail.strip()))

with open('/usr/local/bin/code/cat.txt', 'r') as f:
	for line in f:
		code,aleph = line.split('#')
		cur.execute("INSERT INTO user (code, aleph) VALUES (?,?) ON CONFLICT (code) DO UPDATE SET aleph=excluded.aleph;", (code.strip().lower(), aleph.strip()))

err_con= sqlite3.connect(ERR)
err_cur = err_con.cursor()
err_cur.execute("SELECT * from error;")
cur.executemany("INSERT OR IGNORE INTO error (code, label, text) VALUES (?,?,?);", err_cur.fetchall())
err_con.close()

con.commit()
con.close()

