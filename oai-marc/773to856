#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Aleph MARC 773 -> 756 convertor
#
#    ID                                                  R           D  M      S	
# 001821821 7730 L $$tRudé právo$$x0032-6569$$gRoč. 30, 1950, č. 55, 5. 3., s. 5$$q30:55<5$$919500305
#    ID                       
# XXXXXXXXX 85641 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
#                                                    R   M D S
# http://archiv.ucl.cas.cz/index.php?path=RudePravo/1950/3/5/5.png
#
# CASOPIS
# 001532378 7730 L $$tČeská literatura$$x0009-0468$$gRoč. 41, 1993, č. 1, s. 1-24$$q41:1<1$$91993
#

from __future__ import print_function

import StringIO,requests,sys,os,re

from oaipmh.client import Client
from oaipmh.metadata import MetadataRegistry
from pymarc import marcxml,Field
from lxml.etree import tostring

# VAR ----------------------------------

IN='773.txt'
OUT='773to856.bib'
LOG='773to856.log'

PREFIX='http://archiv.ucl.cas.cz/index.php?path=RudePravo/'
URL='https://aleph.lib.cas.cz/OAI'

TOTAL=0
MATCH=0
NOROC=0
COLON=0
ATTCH=0
MANUA=0
RUBBI=0

# DEF ----------------------------------

def MarcXML(xml):
	handler = marcxml.XmlHandler()
	marcxml.parse_xml(StringIO.StringIO(tostring(xml, encoding='utf-8')), handler)
	return handler.records[0]

def url_response(url,i,log):
	try:
		req = session.get(url)
		if req.status_code == 200:
			if 'Tisk' in req.text:
				return 1
	except:
		log.write(i + ' URL check failed.\n')
	log.write(i + ' BAD ' + url + '\n')
	return 0

def write_record(bib,url,i,log):
	try:
		#oai:aleph22.lib.cas.cz:KNA01-001394011
		record,header,about='','',''
		header, record, about = oai.getRecord(metadataPrefix='marc21', identifier='oai:aleph22.lib.cas.cz:KNA01-' + i)
		if record:
			# XXXXXXXXX 85642 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
			field = Field(
				tag = '856',
				indicators = ['4','1'],
				subfields = ['u', url, 'y', u'Digitální archiv časopisů', '4', 'N']
			)
			record.add_ordered_field(field)
			# =964 \\$aDGARCH
			record.remove_fields('964')
			field = Field(
				tag = '964',
				indicators = [' ',' '],
				subfields = ['a', 'DGARCH']
			)
			record.add_ordered_field(field)
			bib.write(record.__str__())
			bib.write('\n')
		else:
			log.write( i + 'No record.\n')
	except:
		log.write(i + ' Write failed.\n')

def convert_regular(g,i,out,log):
	Y = re.sub('^Roč\. (\d+|\[\d+\]), (\d+), č\. \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	D = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, (\d+)\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	M = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. (\d+)\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	part = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	S = re.sub('^\[?(\d+)\]?.*', '\\1', part.strip())
	URL = PREFIX + Y.strip() + '/' + M.strip() + '/' + D.strip() + '/' + S + '.png'
	if int(Y) > 1949 and int(Y) < 1990:
		if url_response(URL,i,log):
			write_record(out,URL,i,log)
	else:
		log.write(i + ' OLDNEW ' +  URL + '\n')

def convert_noroc(g,i,out,log):
	Y = re.sub('^Roč\. (\d+|\[\d+\]), (\d+), \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	D = re.sub('^Roč\. (\d+|\[\d+\]), \d+, (\d+)\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	M = re.sub('^Roč\. (\d+|\[\d+\]), \d+, \d+\. (\d+)\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	part = re.sub('^Roč\. (\d+|\[\d+\]), \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\2', g)
	S = re.sub('^\[?(\d+)\]?.*', '\\1', part.strip())
	URL = PREFIX + Y.strip() + '/' + M.strip() + '/' + D.strip() + '/' + S + '.png'
	if int(Y) > 1949 and int(Y) < 1990:
		if url_response(URL,i,log):
			write_record(out,URL,i,log)
	else:
		log.write(i + ' OLDNEW ' +  URL + '\n')

def convert_nos(g,q,i,out,log):
	Y = re.sub('^Roč\. (\d+|\[\d+\]), (\d+), č\. \d+, \d+\. \d+\.?$', '\\2', g)
	D = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, (\d+)\. \d+\.?$', '\\2', g)
	M = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. (\d+)\.?$', '\\2', g)
	S = re.sub('\d+:\d+<(\d+)', '\\1', q).strip()
	URL = PREFIX + Y.strip() + '/' + M.strip() + '/' + D.strip() + '/' + S + '.png'
	if int(Y) > 1949 and int(Y) < 1990:
		if url_response(URL,i,log):
			write_record(out,URL,i,log)
	else:
		log.write(i + ' OLDNEW ' +  URL + '\n')

def convert_noroc_nos(g,q,i,out,log):
	Y = re.sub('^Roč\. (\d+|\[\d+\]), (\d+), \d+\. \d+\.?$', '\\2', g)
	D = re.sub('^Roč\. (\d+|\[\d+\]), \d+, (\d+)\. \d+\.?$', '\\2', g)
	M = re.sub('^Roč\. (\d+|\[\d+\]), \d+, \d+\. (\d+)\.?$', '\\2', g)
	S = re.sub('\d+:\d+<(\d+)', '\\1', q).strip()
	URL = PREFIX + Y.strip() + '/' + M.strip() + '/' + D.strip() + '/' + S + '.png'
	if int(Y) > 1949 and int(Y) < 1990:
		if url_response(URL,i,log):
			write_record(out,URL,i,log)
	else:
		log.write(i + ' OLDNEW ' +  URL + '\n')

def convert_att(g,i,out,log):
	Y = re.sub('^Roč\. (\d+|\[\d+\]), (\d+), č\. \d+, \d+\. \d+\.?,.*', '\\2', g)
	D = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, (\d+)\. \d+\.?,.*', '\\2', g)
	M = re.sub('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. (\d+)\.?,.*', '\\2', g)
	part = re.sub('.*s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\1', g)
	S = re.sub('^\[?(\d+)\]?.*', '\\1', part.strip())
	URL = PREFIX + Y.strip() + '/' + M.strip() + '/' + D.strip() + '/' + S + '_.png'
	if int(Y) > 1949 and int(Y) < 1990:
		if url_response(URL,i,log):
			write_record(out,URL,i,log)
	else:
		log.write(i + ' OLDNEW ' +  URL + '\n')

# INIT ----------------------------------

registry = MetadataRegistry()

registry.registerReader('marc21', MarcXML)

oai = Client(URL, registry)

session = requests.Session()

# MAIN ----------------------------------

in_file = open(IN, 'r')
out_file = open(OUT, 'w')
log_file = open(LOG, 'w', 0)

for LINE in in_file:
	if re.match('.*L \$\$tRudé právo.*', LINE):
		TOTAL+=1
		ID = LINE[:9]

		G = re.sub('^.*\$\$g(.*)\$\$q.*$', '\\1', LINE)
		Q = re.sub('^.*\$\$q(.*)\$\$.*$', '\\1', LINE)
		# REGULAR
		#                                   R              D     M                              S	
		if re.match('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', G):
			MATCH+=1
			convert_regular(G,ID,out_file,log_file)
			continue
		# NO C.
		if re.match('^Roč\. (\d+|\[\d+\]), \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', G):
			NOROC+=1
			convert_noroc(G,ID,out_file,log_file)
			continue
		# MULTI
		if re.match('.*;.*', G):
			COLON+=1
			SPART=re.sub('^([^;]+).*', '\\1', G).strip()
	
			if re.match('.* [Pp]říl.*', SPART):
				#print(LINE).strip()# 2
				continue
			if re.match('.*s\..*', SPART) or '<' in Q:
				if re.match('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', SPART):
					convert_regular(SPART,ID,out_file,log_file)
					continue
				if re.match('^Roč\. (\d+|\[\d+\]), \d+, \d+\. \d+\.?, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', SPART):
					convert_noroc(SPART,ID,out_file,log_file)
					continue
				if re.match('^Roč\. (\d+|\[\d+\]), \d+, \d+\. \d+\.?$', SPART) and re.match('.*<\d+', Q):
					convert_noroc_nos(SPART,Q,ID,out_file,log_file)
					continue
				
				if re.match('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\.?', SPART) and re.match('.*<\d+', Q):
					convert_nos(SPART,Q,ID,out_file,log_file)
					continue
			#print(LINE).strip()# 5
			continue
		# ATTACH
		if re.match('.* [Pp]říl.*', G):
			ATTCH+=1
			if re.match('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\.?,.* s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', G):
				convert_att(G,ID,out_file,log_file)
				continue
			else:
				#print(LINE).strip()# 9
				continue
		# MANUAL
		if re.match('.*s\..*', G) or re.match('.*<\d+',Q):
			MANUA+=1
			#if re.match('^Roč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\.?,.*$', G):
			#	#print(LINE).strip()
			#	continue
			#if re.match('^Roč\. (\d+|\[\d+\]), \d+, \d+\. \d+\.?,.*$', G):
			#	#print(LINE).strip()
			#	continue
			#if re.match('.*<\d+',Q):
			#	print(LINE).strip()
			#	continue
			#print(LINE).strip()# 21
			continue
		# RUBBISH
		RUBBI+=1
		#print(LINE).strip()# 164

print('TOTAL: ' + str(TOTAL))
print('MATCH: ' + str(MATCH))
print('NOROC: ' + str(NOROC))
print('COLON: ' + str(COLON))
print('ATTCH: ' + str(ATTCH))
print('MANUA: ' + str(MANUA))
print('RUBBI: ' + str(RUBBI))

in_file.close()
out_file.close()
log_file.close()

