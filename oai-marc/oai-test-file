#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# OAI-PMH 2.0 MARCXML Record validator.
#

# INCLUDE -------------------

from __future__ import print_function

import argparse,StringIO,urllib2,smtplib,sys,os,re

from email.mime.text import MIMEText
from datetime import datetime
from oaipmh.client import Client
from oaipmh.metadata import MetadataRegistry
from pymarc import marcxml,Field
from pymarc.record import Record
from lxml.etree import tostring

# VAR -------------------

#CSV='ucl.csv'
DATA='uclall.xml'

COUNTRY_CODE='/usr/local/bin/country_code.txt'
LANG_CODE='/usr/local/bin/lang_code.txt'
ROLE_CODE='/usr/local/bin/role_code.txt'
SIF_CODE='/usr/local/bin/sif_code.txt'

ERROR={}

COUNTER=0

# DEF -------------------

def url_response(url):
	#try:
	req = urllib2.Request(url)
	req.add_header('User-Agent', 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:70.0) Gecko/20100101 Firefox/70.0')
	if urllib2.urlopen(req, timeout=10).getcode() == 200: return 1
	#except: pass
	return 0

def MarcXML(xml):
	handler = marcxml.XmlHandler()
	marcxml.parse_xml(StringIO.StringIO(tostring(xml, encoding='utf-8')), handler)
	return handler.records[0]

def write_error(ident,tag,sif,code,code_text):
	SIF = sif.decode('utf-8').lower()
	# ident
	ident = str(ident.strip())
	# print
	#print(ident + ' ' + code + ' ' + code_text)
	# write daily CSV
	csv.write(ident + ';' + sif + ';' + code + ';' + code_text + '\n')

def validate(record):

	global COUNTER

	metadata = record
	IDENT = record['001'].value()

	# VALIDATION ------------------

	if args.check:

		#for F in metadata.get_fields('260'):
		#	for VAL in F.get_subfields('a'):
		#		VAL = re.sub('( +,| +;| +:)$','', VAL).strip().strip('[').strip(']')
		#		csv_260a.write(str(IDENT) + ';' + VAL.encode('utf-8') + '\n')
		#	for VAL in F.get_subfields('b'):
		#		VAL = re.sub('( ?,| ?;| ?:)$','', VAL).strip().strip('[').strip(']')
		#		csv_260b.write(str(IDENT) + ';' + VAL.encode('utf-8') + '\n')

		#for F in metadata.get_fields('264'):
		#	for VAL in F.get_subfields('a'):
		#		VAL = re.sub('( +,| +;| +:)$','', VAL).strip().strip('[').strip(']')
		#		csv_264a.write(str(IDENT) + ';' + VAL.encode('utf-8') + '\n')
		#	for VAL in F.get_subfields('b'):
		#		VAL = re.sub('( ?,| ?;| ?:)$','', VAL).strip().strip('[').strip(']')
		#		csv_264b.write(str(IDENT) + ';' + VAL.encode('utf-8') + '\n')
		
		#if metadata.leader[7]  == 'b':
		#	for F in metadata.get_fields('773'):
		#		for VAL in F.get_subfields('t'):
		#			csv_773t.write(str(IDENT) + ';' + VAL.encode('utf-8') + '\n')
		#		for VAL in F.get_subfields('x'):
		#			csv_773x.write(str(IDENT) + ';' + VAL.encode('utf-8') + '\n')
		#return

		# TEST TAG ------------------

		if 'SIF' in metadata:
			if 'a' in metadata['SIF']: SIF = metadata['SIF']['a'].encode('utf-8')
		else:
			SIF = ''
		#	write_error(IDENT, 'SIF', SIF, '000', 'Chybí pole SIF.')# UCLALL
		#for TAG in ('001', '003', '005', '008', '040', '080', '245', '520', '655', '910', '964', 'OWN'): UCLALL
		for TAG in ('001', '003', '008', '040', '245', '520', '655', '910', '964', 'OWN'):
			if TAG not in metadata:
				write_error(IDENT, TAG, SIF, '001', 'Chybí pole ' + TAG + '.')
		#if 'KAT' not in metadata and 'CAT' not in metadata:# UCLALL
		#	write_error(IDENT, 'CAT/KAT', SIF, '002', 'Chybí pole KAT/CAT.')
		if not metadata.leader:
			write_error(IDENT, 'LDR', SIF, '003', 'Chybí pole LDR.')
	
		# TEST TAG/SUBFIELD VALUE ------------------

		if '003' in metadata:
			if metadata['003'].value() != 'CZ PrUCL':
				write_error(IDENT, '003', SIF, '004', 'Chybná hodnota v poli 003.')
		if '040' in metadata:
			if 'a' in metadata['040']:
				if metadata['040']['a'] != 'ABB060':
					write_error(IDENT, '040', SIF, '005', 'Chybná hodnota v podpoli 040a.')
			if 'b' in metadata['040']:
				if metadata['040']['b'] != 'cze':
					write_error(IDENT, '040', SIF, '006', 'Chybná hodnota v podpoli 040b.')
			if 'e' in metadata['040']:
				if metadata['040']['e'] != 'rda':
					write_error(IDENT, '040', SIF, '007', 'Chybná hodnota v podpoli 040e.')
		if '072' in metadata:
			if '2' in metadata['072']:
				if metadata['072']['2'] != 'Konspekt':
					write_error(IDENT, '072', SIF, '008', 'Chybná hodnota v podpoli 072-2.')
		if '082' in metadata:
			if '2' in metadata['082']:
				if metadata['082']['2'] not in ('MRF', 'MRF-sel'):
					write_error(IDENT, '082', SIF, '009', 'Chybná hodnota v podpoli 082-2.')
		if '910' in metadata:
			if 'a' in metadata['910']:
				if metadata['910']['a'] != 'ABB060':
					write_error(IDENT, '910', SIF, '010', 'Chybná hodnota v podpoli 910a.')
		if 'OWN' in metadata:
			if metadata['OWN'].value() != 'UCLA':
				write_error(IDENT, 'OWN', SIF, '011', 'Chybná hodnota v poli OWN.')
		for F in metadata.get_fields('856'):
			if '4' in F:
				if F['4'] != 'N':
					write_error(IDENT, '856', SIF, '012', 'Chybná hodnota v podpoli 856-4.')
			if 'y' in F:
				if F['y'] not in ('online', 'Webarchiv', 'Obsah knihy'):
					write_error(IDENT, '856', SIF, '013', 'Chybná hodnota v podpoli 856y.')

		# TEST SUBFIELD ------------------

		for TAG in ('022', '072', '100', '245', '520'):
			if TAG in metadata:
				if len(metadata[TAG].get_subfields('a')) != 1:
					write_error(IDENT, TAG, SIF, '014', 'Chybí podpole ' + TAG + 'a.')
		for TAG in ('080', '600', '610', '611', '630', '648', '650', '651', '653', '655', '700', '710'):
			for F in metadata.get_fields(TAG):
				if len(F.get_subfields('a')) != 1:
					write_error(IDENT, TAG, SIF, '015', 'Chybí podpole ' + TAG + 'a.')
		#for F in metadata.get_fields('022'):
		#	if len(F.get_subfields('a')) == 0:
		#		write_error(IDENT, '022', SIF, '016', 'Chybí podpole 022a.')
		if '072' in metadata:
			if len(metadata['072'].get_subfields('x')) != 1:
				write_error(IDENT, '072', SIF, '017', 'Chybí podpole 072x.')
			if len(metadata['072'].get_subfields('2')) != 1:
				write_error(IDENT, '072', SIF, '018', 'Chybí podpole 072-2.')
			if len(metadata['072'].get_subfields('9')) != 1:
				write_error(IDENT, '072', SIF, '019', 'Chybí podpole 072-9.')
		for F in metadata.get_fields('080'):
			if len(F.get_subfields('2')) != 1:
				write_error(IDENT, '080', SIF, '020', 'Chybí podpole 080-2.')
		for F in metadata.get_fields('700'):
			if len(F.get_subfields('4')) == 0:
				write_error(IDENT, '700', SIF, '021', 'Chybí podpole 700-4.')
		for F in metadata.get_fields('710'):
			if len(F.get_subfields('4')) == 0:
				write_error(IDENT, '710', SIF, '022', 'Chybí podpole 710-4.')
		VAL=''
		for F in metadata.get_fields('773'):
			if 'g' in F: VAL = F['g']
			if len(F.get_subfields('t')) != 1:
				write_error(IDENT, '773', SIF, '023', 'Chybí podpole 773t.')
			elif 'g'not in F:
				if VAL and not re.match('.*' + F['t'] + '.*', VAL):
					write_error(IDENT, '773', SIF, '024', 'Neplatné pole 773.')
		for F in metadata.get_fields('787'):
			if len(F.get_subfields('t')) != 1:
				write_error(IDENT, '787', SIF, '025', 'Chybí podpole 787t.')
			if len(F.get_subfields('4')) != 1:
				write_error(IDENT, '787', SIF, '026', 'Chybí podpole 787-4.')
		for F in metadata.get_fields('856'):
			if len(F.get_subfields('u')) != 1:
				write_error(IDENT, '856', SIF, '027', 'Chybí podpole 856u.')
			if len(F.get_subfields('y')) != 1:
				write_error(IDENT, '856', SIF, '028', 'Chybí podpole 856y.')

		# TEST VALID LINK ------------------

		#for F in metadata.get_fields('856'):# UCLALL
		#	if 'u' in F:
		#		if not url_response(F['u']):
		#			write_error(IDENT, '856', SIF, '029', 'Nefunkční odkaz v poli 856u.')
		
		# TEST INDICATOR ------------------

		if '041' in metadata:
			if metadata['041'].indicator1 + metadata['041'].indicator2 not in ('1 ', '0 '):
				write_error(IDENT, '041', SIF, '030', 'Chybný indikátor v poli 041.')
		if '072' in metadata:
			if metadata['072'].indicator1 + metadata['072'].indicator2 != ' 7':
				write_error(IDENT, '072', SIF, '031', 'Chybný indikátor v poli 072.')
		if '100' in metadata:
			if metadata['100'].indicator1 + metadata['100'].indicator2 not in ('3 ', '1 ', '0 '):
				write_error(IDENT, '100', SIF, '032', 'Chybný indikátor v poli 100.')
		if '110' in metadata:
			if metadata['110'].indicator1 + metadata['110'].indicator2 not in ('0 ', '1 ', '2 '):
				write_error(IDENT, '110', SIF, '033', 'Chybný indikátor v poli 110.')
		if '245' in metadata:
			if metadata['245'].indicator1 not in ('0', '1'):
				write_error(IDENT, '245', SIF, '034', 'Chybný indikátor v poli 245.')
		if '520' in metadata:
			try:
				if metadata['520'].indicator1 + metadata['520'].indicator2 != '2 ':
					write_error(IDENT, '520', SIF, '035', 'Chybný indikátor v poli 520.')
			except:
				write_error(IDENT, '520', SIF, '179', 'Chybí indikátory v poli 520.')
		for F in metadata.get_fields('600'):
			if F.indicator1 + F.indicator2 not in ('34', '37', '14', '17', '04', '07'):
				write_error(IDENT, '600', SIF, '036', 'Chybný indikátor v poli 600.')
		for F in metadata.get_fields('610'):
			if F.indicator1 + F.indicator2 not in ('14', '17', '24', '27'):
				write_error(IDENT, '610', SIF, '037', 'Chybný indikátor v poli 610.')
		for F in metadata.get_fields('611'):
			if F.indicator1 + F.indicator2 not in ('14', '17', '24', '27'):
				write_error(IDENT, '611', SIF, '038', 'Chybný indikátor v poli 611.')
		for F in metadata.get_fields('648'):
			if F.indicator1 + F.indicator2 not in (' 4', ' 7'):
				write_error(IDENT, '648', SIF, '039', 'Chybný indikátor v poli 648.')
		for F in metadata.get_fields('650'):
			if F.indicator1 + F.indicator2 not in ('14', '17', '04', '07'):
				write_error(IDENT, '650', SIF, '040', 'Chybný indikátor v poli 650.')
		for F in metadata.get_fields('651'):
			if F.indicator1 + F.indicator2 not in (' 4', ' 7'):
				write_error(IDENT, '651', SIF, '041', 'Chybný indikátor v poli 651.')
		for F in metadata.get_fields('653'):
			if F.indicator1 + F.indicator2 != '0 ':
				write_error(IDENT, '653', SIF, '042', 'Chybný indikátor v poli 653.')
		for F in metadata.get_fields('655'):
			if F.indicator1 + F.indicator2 not in (' 4', ' 7'):
				write_error(IDENT, '655', SIF, '043', 'Chybný indikátor v poli 655.')
		for F in metadata.get_fields('700'):
			if F.indicator1 + F.indicator2 not in ('3 ', '1 ', '0 '):
				write_error(IDENT, '700', SIF, '044', 'Chybný indikátor v poli 700.')
		for F in metadata.get_fields('710'):
			if F.indicator1 + F.indicator2 not in ('0 ', '1 ', '2 '):
				write_error(IDENT, '710', SIF, '045', 'Chybný indikátor v poli 710.')
		for F in metadata.get_fields('773'):
			if F.indicator1 + F.indicator2 != '0 ':
				write_error(IDENT, '773', SIF, '046', 'Chybný indikátor v poli 773.')
		for F in metadata.get_fields('787'):
			if F.indicator1 + F.indicator2 != '08':
				write_error(IDENT, '787', SIF, '047', 'Chybný indikátor v poli 787.')

		# TEST DEPENDENCE ------------------

		if metadata.leader[7] == 'm':
			if '260' not in metadata and '264' not in metadata:
				write_error(IDENT, '260/264', SIF, '048', 'Chybný typ záznamu (pole 260/264).')
		for TAG in ('250', '490', '830'):
			if TAG in metadata:
				if metadata.leader[7] != 'm':
					write_error(IDENT, TAG, SIF, '049', 'Chybný typ záznamu (pole ' + TAG + ').')
		if metadata.leader[7] in ('a', 'b'):
			if '773' not in metadata:
				write_error(IDENT, '773', SIF, '050', 'Chybný typ záznamu (pole 773).')

		# TEST SUBFIELD RANGE ------------------

		if '040' in metadata:
			for SUB in metadata['040'].subfields[0::2]:
				if SUB not in ('a', 'b', 'e'):
					write_error(IDENT, '040', SIF, '051', 'Chybný kód podpole v poli 040.')
		if '072' in metadata:
			for SUB in metadata['072'].subfields[0::2]:
				if SUB not in ('a', 'x', '2', '9'):
					write_error(IDENT, '072', SIF, '052', 'Chybný kód podpole v poli 072.')
		if '100' in metadata:
			for SUB in metadata['100'].subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'g', '4', '7', 'x', 'q', 'j'):
					write_error(IDENT, '100', SIF, '053', 'Chybný kód podpole v poli 100.')
		if '110' in metadata:
			for SUB in metadata['110'].subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'n', '4', '7', 'x'):
					write_error(IDENT, '110', SIF, '054', 'Chybný kód podpole v poli 110.')
		if '111' in metadata:
			for SUB in metadata['111'].subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'n', '4', '7', 'x'):
					write_error(IDENT, '111', SIF, '055', 'Chybný kód podpole v poli 111.')
		if '245' in metadata:
			for SUB in metadata['245'].subfields[0::2]:
				if SUB not in ('a', 'b', 'n', 'p', 'c'):
					write_error(IDENT, '245', SIF, '056', 'Chybný kód podpole v poli 245.')
		for F in metadata.get_fields('250'):
			for SUB in F.subfields[0::2]:
				if SUB != 'a':
					write_error(IDENT, '250', SIF, '057', 'Chybný kód podpole v poli 250.')
		if '260' in metadata:
			for SUB in metadata['260'].subfields[0::2]:
				if SUB not in ('a', 'b', 'c'):
					write_error(IDENT, '260', SIF, '058', 'Chybný kód podpole v poli 260.')
		for F in metadata.get_fields('264'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'b', 'c'):
					write_error(IDENT, '264', SIF, '059', 'Chybný kód podpole v poli 264.')
		if '300' in metadata:
			for SUB in metadata['300'].subfields[0::2]:
				if SUB not in ('a', 'b', 'e'):
					write_error(IDENT, '300', SIF, '060', 'Chybný kód podpole v poli 300.')
		for F in metadata.get_fields('490'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'v'):
					write_error(IDENT, '490', SIF, '061', 'Chybný kód podpole v poli 490.')
		for F in metadata.get_fields('500'):
			for SUB in F.subfields[0::2]:
				if SUB != 'a':
					write_error(IDENT, '500', SIF, '062', 'Chybný kód podpole v poli 500.')
		for F in metadata.get_fields('505'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('t', 'r', 'g'):
					write_error(IDENT, '505', SIF, '063', 'Chybný kód podpole v poli 505.')
		if '520' in metadata:
			for SUB in metadata['520'].subfields[0::2]:
				if SUB not in ('a', '2'):
					write_error(IDENT, '520', SIF, '064', 'Chybný kód podpole v poli 520.')
		for F in metadata.get_fields('600'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'q', '7', '2', 'x'):
					write_error(IDENT, '600', SIF, '065', 'Chybný kód podpole v poli 600.')
		for F in metadata.get_fields('610'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'n', '7', '2', 'x'):
					write_error(IDENT, '610', SIF, '066', 'Chybný kód podpole v poli 610.')
		for F in metadata.get_fields('611'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'n', '7', '2', 'x'):
					write_error(IDENT, '611', SIF, '067', 'Chybný kód podpole v poli 611.')
		for F in metadata.get_fields('630'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'l', '7', '2', 'x', 'p', 's'):
					write_error(IDENT, '630', SIF, '068', 'Chybný kód podpole v poli 630.')
		for F in metadata.get_fields('648'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', '7', '2', 'x'):
					write_error(IDENT, '648', SIF, '069', 'Chybný kód podpole v poli 648.')
		for F in metadata.get_fields('650'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', '7', '2', 'x'):
					write_error(IDENT, '650', SIF, '070', 'Chybný kód podpole v poli 650.')
		for F in metadata.get_fields('651'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', '7', '2', 'x'):
					write_error(IDENT, '651', SIF, '071', 'Chybný kód podpole v poli 651.')
		for F in metadata.get_fields('653'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'x'):
					write_error(IDENT, '653', SIF, '072', 'Chybný kód podpole v poli 653.')
		for F in metadata.get_fields('655'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', '7', '2', 'x'):
					write_error(IDENT, '655', SIF, '073', 'Chybný kód podpole v poli 655.')
		for F in metadata.get_fields('700'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'q', '4', '7', 'x', 'j'):
					write_error(IDENT, '700', SIF, '074', 'Chybný kód podpole v poli 700.')
		for F in metadata.get_fields('710'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'b', 'c', 'd', 'n', '4', '7', 'x'):
					write_error(IDENT, '710', SIF, '075', 'Chybný kód podpole v poli 710.')
		for F in metadata.get_fields('773'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 't', 'x', 'n', 'd', 'b', 'k', 'y', 'g', 'q', '9', 'z'):
					write_error(IDENT, '773', SIF, '076', 'Chybný kód podpole v poli 773.')
		for F in metadata.get_fields('787'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('i', 'a', 't', 'n', 'd', 'b', 'k', 'h', 'z', 'y', '4'):
					write_error(IDENT, '787', SIF, '077', 'Chybný kód podpole v poli 787.')
		for F in metadata.get_fields('830'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'p', 'n'):
					write_error(IDENT, '830', SIF, '078', 'Chybný kód podpole v poli 830.')
		for F in metadata.get_fields('856'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('u', 'y', '4'):
					write_error(IDENT, '856', SIF, '079', 'Chybný kód podpole v poli 856.')
		if '910' in metadata:
			for SUB in metadata['910'].subfields[0::2]:
				if SUB != 'a':
					write_error(IDENT, '910', SIF, '080', 'Chybný kód podpole v poli 910.')
		for F in metadata.get_fields('964'):
			for SUB in F.subfields[0::2]:
				if SUB != 'a':
					write_error(IDENT, '964', SIF, '081', 'Chybný kód podpole v poli 964.')
		
		# TEST SUBFIELD ORDER ------------------

		# TEST SUBFIELD REPEAT ------------------
		
		if '041' in metadata:
			for SUB in list(set(metadata['041'].subfields[0::2])):
				if SUB not in ('a', 'b', 'k', 'h'):
					if len(metadata['041'].get_subfields(SUB)) > 1:
						write_error(IDENT, '041', SIF, '082', 'Neplatné opakování podpolí v poli 041.')
		if '044' in metadata:
			for SUB in list(set(metadata['044'].subfields[0::2])):
				if SUB != 'a':
					if len(metadata['044'].get_subfields(SUB)) > 1:
						write_error(IDENT, '044', SIF, '083', 'Neplatné opakování podpolí v poli 044.')
		if '245' in metadata:
			for SUB in list(set(metadata['245'].subfields[0::2])):
				if SUB not in ('n', 'p'):
					if len(metadata['245'].get_subfields(SUB)) > 1:
						write_error(IDENT, '245', SIF, '084', 'Neplatné opakování podpolí v poli 245.')
		if '260' in metadata:
			for SUB in list(set(metadata['260'].subfields[0::2])):
				if SUB not in ('a', 'b'):
					if len(metadata['260'].get_subfields(SUB)) > 1:
						write_error(IDENT, '260', SIF, '085', 'Neplatné opakování podpolí v poli 260.')
		for F in metadata.get_fields('264'):
			for SUB in list(set(F.subfields[0::2])):
				if SUB not in ('a', 'b'):
					if len(F.get_subfields(SUB)) > 1:
						write_error(IDENT, '264', SIF, '086', 'Neplatné opakování podpolí v poli 264.')
		for F in metadata.get_fields('773'):
			for SUB in list(set(F.subfields[0::2])):
				if SUB != 'z':
					if len(F.get_subfields(SUB)) > 1:
						write_error(IDENT, '773', SIF, '087', 'Neplatné opakování podpolí v poli 773.')
		for F in metadata.get_fields('787'):
			for SUB in list(set(F.subfields[0::2])):
				if SUB not in ('k', 'z'):
					if len(F.get_subfields(SUB)) > 1:
						write_error(IDENT, '787', SIF, '088', 'Neplatné opakování podpolí v poli 787.')

		# TEST VALUE RANGE ------------------

		# TEST SUBFIELD DEPENDENCE ------------------

		if '041' in metadata:
			if metadata['041'].indicator1 == '0':
				if 'h' in metadata['041']:
					write_error(IDENT, '041', SIF, '089', 'Chybná kombinace indikátoru a podpolí v poli 041.')
		if '041' in metadata:
			if metadata['041'].indicator1 == '1':
				if 'h' not in metadata['041']:
					write_error(IDENT, '041', SIF, '090', 'Chybná kombinace indikátoru a podpolí v poli 041.')
		if '100' in metadata:
			if metadata['100'].indicator1 == '0':
				if 'a' in metadata['100']:
					if re.match('^.*,.+$', metadata['100']['a']):
						write_error(IDENT, '100', SIF, '091', "Chybný znak ',' v podpoli 'a' v poli 100.")
			if metadata['100'].indicator1 == '1':
				if 'c' in metadata['100']:
					if re.match('^\[.*$', metadata['100']['c']):
						write_error(IDENT, '100', SIF, '092', "Chybný indikátor, v podpoli 'c' v poli 100 není vlastní jméno.")
				#if 'a' in metadata['100']:
				#	if '.' in metadata['100']['a']:
				#		write_error(IDENT, '100', SIF, '093', "Chybný znak '.' v podpoli 'a' v poli 100.")
		if '245' in metadata:
			N=0
			for TAG in ('100', '110', '111', '130'):
				if TAG in metadata: N+=1
			if metadata['245'].indicator1 == '1':
				if not N >= 1:
					write_error(IDENT, '245', SIF, '094', 'Neplatné pole, chybný indikátor v poli 245.')
			if metadata['245'].indicator1 == '0':
				if N != 0:
					write_error(IDENT, '245', SIF, '095', 'Neplatné pole, chybný indikátor v poli 245.')
			if metadata['245'].indicator2 == '0':
				if 'a' in metadata['245']:
					for S in ('The ', 'An ', 'Der ', 'Die ', 'Das ', 'Le ', 'La '):
						if re.match('^' + S + '.*', metadata['245']['a']):
							write_error(IDENT, '245', SIF, '096', 'Neplatný prefix, chybný 2.indikátor v poli 245.')
		for F in metadata.get_fields('600'):
			if F.indicator1 == '0':
				if 'a' in F:
					if re.match('^.*,.+$', F['a']):
						write_error(IDENT, '600', SIF, '097', "Chybný znak v podpoli 'a' v poli 600.")
		for TAG in ('600', '610', '611', '630' ,'648', '650', '651', '655'):
			for F in metadata.get_fields(TAG):
				if F.indicator2 == '7':
					if '2' not in F or '7' not in F:
						write_error(IDENT, TAG, SIF, '098', 'Chybný 2.indikátor v poli ' + TAG + '.')
					if '2' in F and '7' in F:
						if F['2'] != 'czenas':
							write_error(IDENT, TAG, SIF, '099', 'Chybný 2.indikátor v poli ' + TAG + '(czenas).')
				if F.indicator2 == '4':
					if '7' in F or '2' in F and F['2'] == 'czenas':
						write_error(IDENT, TAG, SIF, '100', 'Chybný 2.indikátor v poli ' + TAG + '.')
					#if '2' in F:
					#	if F['2'] == 'czenas':
					#		write_error(IDENT, TAG, SIF, '101', 'Chybný 2.indikátor v poli ' + TAG + '.')
	
		# TEST SPACE DOT / SPACE COMA TAG 2xx/5xx ------------------

		# TEST DATE / COUNTRY / LANG ------------------
		
		if '008' in metadata:
			DATE = metadata['008'].value()[7:15].strip()
			if metadata['008'].value()[6] not in ('s', 'e', 'm', 'q'):
				write_error(IDENT, '008', SIF, '102', 'Chybný kód data v poli 008.')
			if not re.match('^[0-9u]+$', DATE) or len(DATE) not in (4, 6, 8):
					write_error(IDENT, '008', SIF, '103', 'Neplatné datum v poli 008.')
			if metadata['008'].value()[6] in ('q'):
				if len(DATE) != 4:
					Q=False
					if len(DATE) in (6, 8):
						if '773' in metadata and 'g' in metadata['773']:
							if re.match('^\[.*\]$', metadata['773']['g']): Q=True
					if not Q:
						write_error(IDENT, '008', SIF, '104', 'Nesoulad mezi kódem data a datem (má být RRRR).')
			if metadata['008'].value()[6] in ('s'):
				if len(DATE) != 4:
					write_error(IDENT, '008', SIF, '104', 'Nesoulad mezi kódem data a datem (má být RRRR).')
			if metadata['008'].value()[6] == 'e':
				if len(DATE) not in (6, 8):
					write_error(IDENT, '008', SIF, '105', 'Nesoulad mezi kódem data a datem (má být RRRRMM/RRRRMMDD).')
			if metadata['008'].value()[6] == 'm':
				if len(DATE) != 8:
					write_error(IDENT, '008', SIF, '106', 'Nesoulad mezi kódem data a datem (není interval roků).')
		if metadata.leader[7] == 'm':
			if '008' in metadata:
				DATA = metadata['008'].value()[7:11]
				if '260' in metadata:
					if 'c' in metadata['260']:
						if DATA != re.sub('[\[\]]', '', metadata['260']['c'].strip('.')):
							write_error(IDENT, '008', SIF, '107', 'Nesoulad mezi daty v poli 008 a 260/264.')
				for F in metadata.get_fields('264'):
					if 'c' in F:
						if DATA != re.sub('[\[\]]', '', F['c'].strip('.')):
							write_error(IDENT, '008', SIF, '108', 'Nesoulad mezi daty v poli 008 a 260/264.')
		if metadata.leader[7] == 'b':
			if '008' in metadata:
				DATA = metadata['008'].value()[7:15].strip()
				if '773' in metadata:
					if '9' in metadata['773']:
						NINE=False
						if DATA == metadata['773']['9']: NINE=True
						if '-' in metadata['773']['9']:
							if DATA == re.sub('^(.*)-.*','\\1', metadata['773']['9']): NINE=True
							if DATA == metadata['773']['9'].replace('-',''): NINE=True
						if not NINE:
							write_error(IDENT, '008', SIF, '109', 'Nesoulad mezi daty v poli 008 a 773-9.')
		if '008' in metadata:
			DATA = metadata['008'].value()[15:18].strip()
			if country_code:
				if DATA not in country_code:
					write_error(IDENT, '008', SIF, '110', 'Chybný kód země v poli 008.')
				if '044' in metadata:
					if DATA != metadata['044'].subfields[1::2][0]:
						write_error(IDENT, '008', SIF, '111', 'Nesoulad mezi kódy zemí v poli 008 a 044.')
		if '008' in metadata:
			DATA = metadata['008'].value()[35:38].strip()
			if lang_code:
				if DATA not in lang_code:
					write_error(IDENT, '008', SIF, '112', 'Chybný kód jazyka v poli 008.')
				if '041' in metadata:
					if DATA not in metadata['041'].subfields[1::2][0]:
						write_error(IDENT, '008', SIF, '113', 'Nesoulad mezi kódy jazyků v poli 008 a 041.')
		#if '041' in metadata:# UCLALL
		#	if lang_code:
		#		for DATA in metadata['041'].subfields[1::2]:
		#			if DATA not in lang_code:
		#				write_error(IDENT, '041', SIF, '114', 'Chybný kód jazyka v poli 041.')
		#	if len(metadata['041'].subfields) <= 2:
		#			write_error(IDENT, '041', SIF, '115', 'Pole 041 musí obsahovat 2 a více podpolí.')
		if '044' in metadata:
			if country_code:
				for DATA in metadata['044'].subfields[1::2]:
					if DATA not in country_code:
						write_error(IDENT, '044', SIF, '116', 'Chybný kód země v poli 044.')
			if len(metadata['044'].subfields) <= 2:
					write_error(IDENT, '044', SIF, '117', 'Pole 044 musí obsahovat 2 a více podpolí.')
		if '100' in metadata:
			if role_code:
				for DATA in metadata['100'].get_subfields('4'):
					if DATA not in role_code:
						write_error(IDENT, '100', SIF, '118', 'Chybný kód role v poli 100.')
			if 'j' in metadata['100']:
				if metadata['100']['j'] not in ('bbg', 'rej'):
					write_error(IDENT, '100', SIF, '119', 'Chybný kód role v podpoli 100j.')
				if '4' not in metadata['100'] or 'oth' not in metadata['100'].get_subfields('4'):
						write_error(IDENT, '100', SIF, '120', 'V poli 100 chybí podpole 4 s hodnotou "oth".')
		for F in metadata.get_fields('700'):
			if role_code:
				for DATA in F.get_subfields('4'):
					if DATA not in role_code:
						write_error(IDENT, '700', SIF, '121', 'Chybný kód role v poli 700.')
			if 'j' in F:
				if F['j'] not in ('bbg', 'rej'):
					write_error(IDENT, '700', SIF, '122', 'Chybný kód role v podpoli 700j.')
				if '4' not in F or 'oth' not in F.get_subfields('4'):
						write_error(IDENT, '700', SIF, '123', 'V poli 700 chybí podpole 4 s hodnotou "oth".')
		if '100' in metadata:
			if '4' in metadata['100']:
				DATA = metadata['100'].get_subfields('4')
				if 'aut' not in DATA and 'ive' not in DATA:
					write_error(IDENT, '100', SIF, '124', 'V poli 100 chybí kód role "aut" nebo "ive".')

		# TEST OTHER ------------------

		for TAG in ('001', '003', '005', '008', '040', '041', '044', '072', '100', '110', '111', '130', '245', '260', '520', '910', 'OWN', 'SIF', 'ZAZ'):
			if len(metadata.get_fields(TAG)) > 1:
				write_error(IDENT, TAG, SIF, '125', 'Neplatné opakování pole ' + TAG + '.')
		if '110' in metadata:
			if metadata['110'].indicator1 + metadata['110'].indicator2  == '0 ':
				if 'c' in metadata['110']:
					if not re.match('^\[.*$', metadata['110']['c']):
						write_error(IDENT, '110', SIF, '126', "Chybný znak v podpoli 'c' v poli 110.")
				else:
					write_error(IDENT, '110', SIF, '127', "Chybí podpole 'c' v poli 110.")
		for F in metadata.get_fields('710'):
			if F.indicator1 + F.indicator2  == '0 ':
				if 'c' in F:
					if not re.match('^\[.*$', F['c']):
						write_error(IDENT, '710', SIF, '128', "Chybný znak v podpoli 'c' v poli 710.")
				else:
					write_error(IDENT, '710', SIF, '129', "Chybí podpole 'c' v poli 710.")
		#if len(metadata.get_fields('300')) > 1:
		#	BAD=False
		#	for F in metadata.get_fields('964'):
		#		if F.value() != 'INT': BAD=True
		#	for F in metadata.get_fields('300'):
		#		if F.subfields[0] != 'e': BAD = True
		#	if BAD:
		#		 write_error(IDENT, '300', SIF, '130', 'Neplatné opakování pole 300.')
		if '008' in metadata:
			for F in metadata.get_fields('CAT','KAT')[:1]:# first CAT
				if 'c' in F:
					if metadata['008'].value()[:6] != F['c'][2:]:
						write_error(IDENT, '008', SIF, '131','Nesoulad data založení v poli 008/CAT.')
		#008 -> rule 103
		#
		# repeatable: 015, 020, 035, 505, 787
		#             020q, 787k, 787x, 787z, 260a, 260b, 264a, 264b

		# CNB
		CNB=True
		if '008' in metadata:
			if metadata['008'].value()[15:18].strip() != 'xr': CNB=False
		if '044' in metadata:
			if 'xr' not in metadata['044'].value(): CNB=False
		if metadata.leader:
			if metadata.leader[7] != 'm': CNB=False
		if '506' in metadata:
			if re.match(u'^Bez čísla ČNB.*', metadata['506'].value()): CNB=False
		if CNB:
			if '015' not in metadata:
				write_error(IDENT, '015', SIF, '132', 'Chybí číslo ČNB.')
		# CNB format
		for F in metadata.get_fields('015'):
			if not re.match('^cnb\d{9}$', F.value()):
				write_error(IDENT, '015', SIF, '133', 'Chybný tvar čísla ČNB.')
		#ISBN
		ISBN=True
		if metadata.leader:
			if metadata.leader[7] != 'm': ISBN=False
		if '008' in metadata:
			if metadata['008'].value()[7:11].isdigit():
				if int(metadata['008'].value()[7:11]) < 1989: ISBN=False
		if '506' in metadata:
			if re.match('.*ISBN.*', metadata['506'].value()): ISBN=False
		if ISBN:
			if '020' not in metadata:
				write_error(IDENT, '020', SIF, '134', 'Chybí ISBN.')
		#ISBN format
		for F in metadata.get_fields('020'):
			for I in F.get_subfields('a'):
				ISBN=False
				if re.match('^[0-9X]{10}$', I.replace('-','')):	ISBN=True
				if re.match('^[0-9X]{13}$', I.replace('-','')): ISBN=True
				if not ISBN:
					write_error(IDENT, '020', SIF, '135', 'Chybný tvar ISBN.')
		# 020q
		for F in metadata.get_fields('020'):
			INT = F.get_subfields('q')
			if INT:
				if not (re.match('^\(.*', INT[0]) and re.match('.*\)$', INT[-1])):
					write_error(IDENT, '020', SIF, '136', 'Chybná interpunkce v poli 020q.')
				if len(INT) >= 2:
					for I in INT[:-1]:
						if not re.match('.*;$', I):
							write_error(IDENT, '020', SIF, '136', 'Chybná interpunkce v poli 020q.')
		# 020	
		for F in metadata.get_fields('020'):
			for SUB in F.subfields[0::2]:
				if SUB not in ('a', 'q', 'z'):
					write_error(IDENT, '020', SIF, '137', 'Chybný kód podpole v poli 020.')
		# 035
		if '035' in metadata:
			BASE=False
			for F in metadata.get_fields('964'):
				if F.value() in ('B70', 'B80', 'B97', 'CLE', 'ECS', 'ECR', 'RET'): BASE=True
			if not BASE:
				write_error(IDENT, '964', SIF, '138', 'Chybné označení báze v 964.')
		for F in metadata.get_fields('964'):
			if F.value() in ('B70', 'B80', 'B97', 'CLE', 'ECS', 'ECR', 'RET'):
				if '035' not in metadata:
					write_error(IDENT, '035', SIF, '139', 'Chybí pole 035.')
		# 035a
		BASE=False
		SUB = metadata.get_fields('035')
		if SUB:
			if len(SUB) == 1:
				B1 = re.sub('.*\(ISIS-(...)-MFN\).*', '\\1', SUB[0].value())
				if B1 != 'CLE': BASE=True
			if len(SUB) == 2:
				B1 = re.sub('.*\(ISIS-(...)-MFN\).*', '\\1', SUB[0].value())
				B2 = re.sub('.*\(ISIS-(...)-ID\).*', '\\1', SUB[1].value())
				if not (B1 and B2) in ('B70', 'B80', 'B97', 'ECS', 'ECR', 'RET'): BASE=True
			if BASE:
				write_error(IDENT, '035', SIF, '140', 'Chybná hodnota v 035a.')
		# 100c
		if '100' in metadata:
			if 'c' in metadata['100']:
				if re.match('^\[.*\]$', metadata['100']['c']):
					C = re.sub('^\[(.*)\]$', '\\1', metadata['100']['c']).strip()
					CS = re.sub('^([^(]+).*', '\\1', C).strip()
					F = [F['t'] for F in metadata.get_fields('773') if 't' in F]
					FS = [re.sub('^([^\[]+).*','\\1', S['t']).strip() for S in metadata.get_fields('773') if 't' in S]
				 	if C not in F:
						if CS not in FS:
							write_error(IDENT, '100', SIF, '141', 'Nesoulad názvu zdrojového dokumentu 100c/773t.')
		# 110c
		#if '110' in metadata:
		#	if metadata['110'].indicator1 == '0':
		#		if not ('c' in metadata['110'] and re.match('^\[.*', metadata['110']['c'])):
		#			write_error(IDENT, '110', SIF, '142', 'Chybný zápis podpole 110c.')
		# 110b
		if '110' in metadata:
			if metadata['110'].indicator1 == '1':
				if 'b' not in metadata['110']:
					write_error(IDENT, '110', SIF, '143', 'Chybí podpole 110b.')
		# 710c
		#for F in metadata.get_fields('710'):
		#	if F.indicator1 == '0':
		#		if not ('c' in F and re.match('^\[.*', F['c'])):
		#			write_error(IDENT, '710', SIF, '144', 'Chybný zápis podpole 710c.')
		# 710b
		for F in metadata.get_fields('710'):
			if F.indicator1 == '1':
				if not 'b' in F:
					write_error(IDENT, '710', SIF, '145', 'Chybí podpole 710b.')
		# 245c
		if '245' in metadata:
			if 'c' in metadata['245']:
				if ';' in metadata['245']['c']:
					if re.findall('(?<![^ ] );|;(?! [^ ])', metadata['245']['c']):
						write_error(IDENT, '245', SIF, '146', 'Chybný zápis středníku v 245c.')
		# 505r
		for F in metadata.get_fields('505'):
			if 'r' in F:
				if ';' in F['r']:
					if re.findall('(?<![^ ] );|;(?! [^ ])', F['r']):
						write_error(IDENT, '505', SIF, '147', 'Chybný zápis středníku v 505r.')
		# 787n
		for F in metadata.get_fields('787'):
			if 'n' in F:
				if ';' in F['n']:
					if re.findall('(?<![^ ] );|;(?! [^ ])', F['n']):
						write_error(IDENT, '787', SIF, '148', 'Chybný zápis středníku v 787n.')
		# 787k
		for F in metadata.get_fields('787'):
			for SUB in F.get_subfields('k'):
				if ';' in SUB:
					if re.findall('(?<![^ ] );|;(?! [^ ])', SUB):
						write_error(IDENT, '787', SIF, '149', 'Chybný zápis středníku v 787k.')
		# 773n
		for F in metadata.get_fields('773'):
			if 'n' in F:
				if ';' in F['n']:
					if re.findall('(?<![^ ] );|;(?! [^ ])', F['n']):
						write_error(IDENT, '773', SIF, '150', 'Chybný zápis středníku v 773n.')
		# 245c
		if '245' in metadata:
			if 'c' in metadata['245']:
				if re.findall('\[ =', metadata['245']['c']):
					write_error(IDENT, '245', SIF, '151', 'Chybná interpunkce v 245c mezi [ a = je mezera.')
		# 505r
		for F in metadata.get_fields('505'):
			if 'r' in F:
				if re.findall('\[ =', F['r']):
					write_error(IDENT, '505', SIF, '152', 'Chybná interpunkce v 505r mezi [ a = je mezera.')
		# 505r
		for F in metadata.get_fields('505'):
			if 'r' in F:
				if len(re.findall('\[', F['r'])) != len(re.findall('\]', F['r'])):
					write_error(IDENT, '505', SIF, '153', 'Odlišný počet [ a ] v poli 505r.')
		# 245c
		if '245' in metadata:
			if 'c' in metadata['245']:
				if len(re.findall('\[', metadata['245']['c'])) != len(re.findall('\]', metadata['245']['c'])):
					write_error(IDENT, '245', SIF, '154', 'Odlišný počet [ a ] v poli 245c.')
		# 245
		if '245' in metadata:
			if metadata['245'].indicator1 == '0':
				if '700' not in metadata:
					if u'Nepodepsáno.' not in [F.value() for F in metadata.get_fields('500')]:
						BIO=False
						for B in [F['a'] for F in metadata.get_fields('655') if 'a' in F]:
							if B in (
								u'biografické poznámky',
								u'bibliografické poznámky',
								u'bio-bibliografické poznámky',
								u'biograficko-bibliografické poznámky'
								): BIO= True
						if not BIO:
							write_error(IDENT, '245', SIF, '155', 'Chybný 1.indikátor pole 245c, nebo chybí pole 700, "Nepodepsáno." v 500, či nejde o bbp.')
		# 245c
		GER=False
		if '008' in metadata:
				if metadata['008'].value()[35:39] == 'ger': GER=True
		if '041' in metadata:
				if 'ger' in metadata['041'].subfields[1::2]: GER=True
		if not GER:
			if '245' in metadata:
				if 'c' in metadata['245']:
					for S in re.findall('; \S', metadata['245']['c']):
						if S[2].isupper():
							write_error(IDENT, '245', SIF, '156', 'Chyba v poli 245c po středníku následuje velké písmeno.')
		# 245c
		if '245' in metadata:
			if metadata['245'].indicator1 == '0':
				if 'c' in metadata['245']:
					if metadata['245']['c'][:1].isupper():
						EDIT=False
						for E in ('ed.', 'edd.', 'eds.', 'hg.', '.)'):
							if E in metadata['245']['c'].lower(): EDIT=True
						if not EDIT:
							write_error(IDENT, '245', SIF, '157', 'Chyba v 245c 1.indikátor je 0, pole začíná velkým písmenem.')
		# 245b
		if '245' in metadata:
			if 'b' in metadata['245']:
				if re.match('^\(.*', metadata['245']['b']):
					write_error(IDENT, '245', SIF, '158', 'Chyba podpole 245b začíná na (.')
		# 245 
		#if '245' in metadata:
		#	if 'a' in metadata['245']:
		#		if re.findall('\D[1-9]\D|\D[1][0-9]\D|\D20\D', metadata['245']['a']):
		#			write_error(IDENT, '245', SIF, '159', 'Chyba v poli 245a, označení části je třeba zapsat do pole 245n.')
		#	if 'b' in metadata['245']:
		#		if re.findall('\D[1-9]\D|\D[1][0-9]\D|\D20\D', metadata['245']['b']):
		#			write_error(IDENT, '245', SIF, '160', 'Chyba v poli 245b, označení části je třeba zapsat do pole 245n.')
		# 245
		if '245' in metadata:
			for SUB in metadata['245'].subfields[1::2]:
				if re.findall('(?<!\.\.)\. :', SUB):
					DC=False
					for R in re.findall('(?<!\.)(.|^)\. :', SUB):
						if not R.isupper(): DC=True
					if DC:
						write_error(IDENT, '245', SIF, '161', 'Nepovolená kombinace . : v poli 245.')
		# 245c
		if '245' in metadata:
			if 'c' in metadata['245'] and metadata['245'].indicator1 == '1':
				if '[=' not in re.sub('(^[^;,]+).*','\\1', metadata['245']['c']):
					if '100' in metadata and 'a' in metadata['100']:
						DOT=False
						if metadata['100']['a'] == metadata['245']['c']: DOT=True
						if metadata['100']['a'] == metadata['245']['c'].strip('.'): DOT=True
						if not DOT:
							if metadata['245']['c'][:1].islower():
								write_error(IDENT, '245', SIF, '162', 'Chybný zápis 245c, 1.indikátor je 1, začíná na malé písmeno.')
		# 245
		if '245' in metadata:
			if metadata['245'].indicator1 == '1':
				if'c' not in metadata['245']:
					SKIP=False
					for F in  metadata.get_fields('506'):
						if '163' in F.get_subfields('a'): SKIP=True
					if not SKIP:
						write_error(IDENT, '245', SIF, '163', 'Chybná hodnota 1.indikátoru pole 245, chybí podpole "c".')
		# 245c
		if '245' in metadata:
			if 'c' in metadata['245']:
				for S in re.findall('\[.*?\]', metadata['245']['c']):
					if re.match('\[=.*\]', S):
						SPL = re.sub('\[=(.*)\]', '\\1', S).strip().split(' ')
						if len(SPL) == 2:
							if SPL[0][0].isupper() and SPL[1][0].isupper():
								if ',' not in ' '.join(SPL):
									write_error(IDENT, '245', SIF, '164', 'Chybný zápis dešifrovaného jména v 245c.')
		# 505r
		for F in metadata.get_fields('505'):
			if 'r' in F:
				for S in re.findall('\[.*?\]', F['r']):
					if re.match('\[=.*\]', S):
						SPL = re.sub('\[=(.*)\]', '\\1', S).strip().split(' ')
						if len(SPL) == 2:
							if SPL[0][0].isupper() and SPL[1][0].isupper():
								if ',' not in ' '.join(SPL):
									write_error(IDENT, '505', SIF, '165', 'Chybný zápis dešifrovaného jména v 505r.')
		# 245c			
		if '245' in metadata:
			if 'c' in metadata['245']:
				if re.match('.*s\. [0-9]+.*', metadata['245']['c']):
					write_error(IDENT, '245', SIF, '166', 'Nenáležitý zápis stran v 245c.')
		# 264a
		if '264' in metadata:
			IND=0
			for F in metadata['264'].subfields[0::2]:
				if F == 'a' and IND > 0:
					if not re.match('.*;$', metadata['264'].subfields[1::2][IND - 1]):
						write_error(IDENT, '264', SIF, '167', "Chybná interpunkce 264a, před podpolem 'a' má být středník.")
				IND+=1
		# 260a
		if '260' in metadata:
			IND=0
			for F in metadata['260'].subfields[0::2]:
				if F == 'a' and IND > 0:
					if not re.match('.*;$', metadata['260'].subfields[1::2][IND - 1]):
						write_error(IDENT, '260', SIF, '168', "Chybná interpunkce 260a, před podpolem 'a' má být středník.")
				IND+=1
		# 264b
		if '264' in metadata:
			IND=0
			for F in metadata['264'].subfields[0::2]:
				if F == 'b' and IND == 0:
					write_error(IDENT, '264', SIF, '169', "Chybná interpunce 264b, před podpolem 'b' má být dvojtečka.")
				if F == 'b' and IND > 0:
					if not re.match('.*:$', metadata['264'].subfields[1::2][IND - 1]):
						write_error(IDENT, '264', SIF, '169', "Chybná interpunce 264b, před podpolem 'b' má být dvojtečka.")
				IND+=1
		# 260b
		if '260' in metadata:
			IND=0
			for F in metadata['260'].subfields[0::2]:
				if F == 'b' and IND == 0:
					write_error(IDENT, '260', SIF, '170', "Chybná interpunce 260b, před podpolem 'b' má být dvojtečka.")
				if F == 'b' and IND > 0:
					if not re.match('.*:$', metadata['260'].subfields[1::2][IND - 1]):
						write_error(IDENT, '260', SIF, '170', "Chybná interpunce 260b, před podpolem 'b' má být dvojtečka.")
				IND+=1
		# 300e
		for F in metadata.get_fields('300'):
			if 'e' in F.subfields[:1]:
				if 'INT' not in [F.value() for F in metadata.get_fields('964')]:
					write_error(IDENT, '300', SIF, '171', 'Chybný zápis pole 300, nebo v 964 chybí kód INT.')
		# 490
		if '490' in metadata:
			IND=0
			SUB = metadata['490'].subfields[0::2]
			for F in SUB:
				if F == 'a' and IND > 0:
					if SUB[IND - 1] == 'v':
						if not re.match('.*\.$', metadata['490'].subfields[1::2][IND - 1]):
							write_error(IDENT, '490', SIF, '172', "Chybné oddělení opakovaného podpole 490a, má být tečka.")
				IND+=1
		# 490
		if '490' in metadata:
			IND=0
			SUB = metadata['490'].subfields[0::2]
			for F in SUB:
				if F == 'a' and IND > 0:
					if SUB[IND - 1] == 'a':
						if not re.match('.*=$', metadata['490'].subfields[1::2][IND - 1]):
							write_error(IDENT, '490', SIF, '173', "Chybné oddělení opakovaného podpole 490a, má být rovnítko.")
				IND+=1
		# 245c / 505r generic
		if '245' in metadata:
			if 'c' in metadata['245']:
				if re.match('.*,[^ ].*', metadata['245']['c']):
					write_error(IDENT, '245', SIF, '174', 'Chybí mezera za čárkou v podpoli 245c.')
		for F in metadata.get_fields('505'):
			if 'r' in F:
				if re.match('.*,[^ ].*', F['r']):
					write_error(IDENT, '505', SIF, '175', 'Chybí mezera za čárkou v podpoli 505r.')
		# 245c / 505r generic
		if '245' in metadata:
			if 'c' in metadata['245']:
				if re.findall('(?<![0-9\[ ])=', metadata['245']['c']):
					write_error(IDENT, '245', SIF, '176', 'Chybný znak před znakem = v podpoli 245c.')
		for F in metadata.get_fields('505'):
			if 'r' in F:
				if re.findall('(?<![0-9\[ ])=', F['r']):
					write_error(IDENT, '505', SIF, '177', 'Chybný znak před znakem = v podpoli 505r.')

		# EXTRA

		if '080' not in metadata:
			PASS=False
			if '600' in metadata and metadata['600'].indicator2 == '7': PASS=True 
			if '655' in metadata and metadata['655'].indicator2 == '7': PASS=True
			if not PASS:
				write_error(IDENT, TAG, SIF, '178', 'Chybí pole 080.')

# ARG -------------------

parser = argparse.ArgumentParser(description="OAI PMH 2.0 MARCXML Validator.")
parser.add_argument('--check', help='Validation control.', action='store_true')
args = parser.parse_args()

# INIT -------------------

#try:
#	log = open(LOG, 'w', 0)
#	log.write(HTML_HEADER)
#except:
#	print('LOG: Read only FS exiting..')
#	exit(1)
#try:
#	csv = open(CSV, 'w', 0)
#except:
#	print('CSV: Read only FS exiting..')
#	exit(1)

try:
	with open(COUNTRY_CODE, 'r') as f: country_code = f.read().splitlines()
except: country_code = []

try:
	with open(LANG_CODE, 'r') as f:	lang_code = f.read().splitlines()
except: lang_code = []

try:
	with open(ROLE_CODE, 'r') as f:	role_code = f.read().splitlines()
except: role_code = []

try:
	sif_code = {}
	with open(SIF_CODE, 'r') as f:
		for line in f:
			acct_code, acct_addr = line.decode('utf-8').split(':')
			sif_code[acct_code] = acct_addr.strip()
except: sif_code = {}


# MAIN -------------------

record = Record()

record.leader = '     nab a22     4i 4500'
field = Field(tag = '001', data='002524717')
record.add_ordered_field(field)
field = Field(tag = '003', data='CZ PrUCL')
record.add_ordered_field(field)
field = Field(tag = '005', data='20200513155735.0')
record.add_ordered_field(field)
field = Field(tag = '008', data='191204q20192020xr            ||| ||cze d')
record.add_ordered_field(field)
field = Field(tag = '015', indicators = [' ',' '], subfields = ['a', 'cnb000000000'])
record.add_ordered_field(field)
field = Field(tag = '020', indicators = [' ',' '], subfields = ['a', '000-00-0X-00-0X-00', 'q', '(foo;','q','foobar;','q', 'bar)'])
record.add_ordered_field(field)
#field = Field(tag = '035', indicators = [' ',' '], subfields = ['a', 'bla(ISIS-B80-MFN)bla'])
#record.add_ordered_field(field)
#field = Field(tag = '035', indicators = [' ',' '], subfields = ['a', 'bla(ISIS-B80-ID)bla'])
#record.add_ordered_field(field)
field = Field(tag = '040', indicators = [' ',' '], subfields = ['a', 'ABB060', 'b', 'cze', 'e', 'rda'])
record.add_ordered_field(field)
field = Field(tag = '041', indicators = ['1',' '], subfields = ['a', 'cze', 'b', 'cze', 'h', 'zza'])
record.add_ordered_field(field)
field = Field(tag = '044', indicators = ['1',' '], subfields = ['a','xr','b','xna'])
record.add_ordered_field(field)
field = Field(tag = '080', indicators = [' ',' '], subfields = ['a', '06.05NOBEL','2', 'MRF'])
record.add_ordered_field(field)
#field = Field(tag = '100', indicators = ['0',' '], subfields = ['a', 'boooo','c','[boo]','4','aut','4','oth','j','rej'])
#record.add_ordered_field(field)
#field = Field(tag = '110', indicators = ['0',' '], subfields = ['a', 'Dokonaly zaznam.','c','[boo]','4','aut','4','oth'])
#record.add_ordered_field(field)
field = Field(tag = '245', indicators = ['0',' '], subfields = ['a', 'The Dokonaly ... :zaZ. :nam F. :','b','OKtest', 'c', 'Booo0.)'])
record.add_ordered_field(field)
field = Field(tag = '260', indicators = ['1','0'], subfields = ['a','Berlin ;','a',u'München ;','a','Boston :','b','foo :','b',u'De Gruyter Oldenbourg,','c','[2019].'])
record.add_ordered_field(field)
#field = Field(tag = '264', indicators = ['1','0'], subfields = ['a','Berlin ;','a',u'München ;','a','Boston :','b',u'De Gruyter Oldenbourg,','c','[2019].'])
field = Field(tag = '264', indicators = ['0','0'], subfields = ['a','Foo :','b',u'De Gruyter Oldenbourg,','c','[2019].'])
record.add_ordered_field(field)
field = Field(tag = '300', indicators = ['1','0'], subfields = ['e', 'boo', 'a','foo'])
record.add_ordered_field(field)
#field = Field(tag = '264', indicators = ['1','0'], subfields = ['c', '1234'])
#record.add_ordered_field(field)
#field = Field(tag = '490', indicators = [' ',' '], subfields = ['a', 'foo=','v','bar.','a','bar'])
#record.add_ordered_field(field)
#field = Field(tag = '500', indicators = [' ',' '], subfields = ['a', u'Boo.'])
#record.add_ordered_field(field)
#field = Field(tag = '500', indicators = [' ',' '], subfields = ['a', u'Nepodepsáno.'])
#record.add_ordered_field(field)
field = Field(tag = '505', indicators = [' ',' '], subfields = ['t', u'Bez čísla ČNB','r','[=Tomas, Okurka]sdf[=Pavel, Bobek]'])
record.add_ordered_field(field)
field = Field(tag = '505', indicators = [' ',' '], subfields = ['t', u'Bez čísla ČNB','r','[=Tomas, Okurka]sdf[=Pavel, Bobek]'])
record.add_ordered_field(field)
field = Field(tag = '506', indicators = [' ',' '], subfields = ['a', u'Bez čísla ČNB','a','163','r','foo;bar'])
record.add_ordered_field(field)
field = Field(tag = '520', indicators = ['2',' '], subfields = ['a', 'Dokonaly zaznam.'])
record.add_ordered_field(field)
field = Field(tag = '600', indicators = ['0','4'], subfields = ['a', 'DGARCH','x','foo','2','abcd'])
record.add_ordered_field(field)
field = Field(tag = '600', indicators = ['0','4'], subfields = ['a', 'DGARCH','x','foo','c','czenas'])
record.add_ordered_field(field)
field = Field(tag = '651', indicators = [' ','4'], subfields = ['a', 'DGARCH'])
record.add_ordered_field(field)
field = Field(tag = '655', indicators = [' ','7'], subfields = ['a', u'poznámky','2','czenas','7','Perfektni zaznam.'])
record.add_ordered_field(field)
field = Field(tag = '655', indicators = [' ','4'], subfields = ['a', u'biografické poznámky'])
record.add_ordered_field(field)
#field = Field(tag = '700', indicators = ['0',' '], subfields = ['a', 'Dokonaly zaznam.','c','[boooo]','4','oth','j','rej'])
#record.add_ordered_field(field)
field = Field(tag = '710', indicators = ['0',' '], subfields = ['a', 'Dokonaly zaznam.','c','[boo]','4','aut','4','oth'])
record.add_ordered_field(field)
#field = Field(tag = '773', indicators = ['0',' '], subfields = ['9','20191220-20191222','a', 'Dokonaly zaznam.','t', 'foo','g', 'Dokonaly zaznam. 2019 a 2020'])
#record.add_ordered_field(field)
field = Field(tag = '773', indicators = ['0',' '], subfields = ['9','2019-2020','a', 'Dokonaly zaznam.','t', 'boo','g', '[datum]','n','boo ; boo'])
record.add_ordered_field(field)
field = Field(tag = '787', indicators = ['0','8'], subfields = ['4','boo','t', '2019', 'n','boo ; boo','k','boo ; boo'])
record.add_ordered_field(field)
field = Field(tag = '910', indicators = [' ',' '], subfields = ['a', 'ABB060'])
record.add_ordered_field(field)
field = Field(tag = '964', indicators = [' ','7'], subfields = ['a', 'B12'])
record.add_ordered_field(field)
field = Field(tag = '964', indicators = [' ','7'], subfields = ['a', 'INT'])
record.add_ordered_field(field)
field = Field(tag = 'OWN', indicators = [' ',' '], subfields = ['a', 'UCLA'])
record.add_ordered_field(field)
field = Field(tag = 'KAT', indicators = [' ',' '], subfields = ['a', 'UCLJF'])
record.add_ordered_field(field)
field = Field(tag = 'SIF', indicators = [' ',' '], subfields = ['a', 'moo'])
record.add_ordered_field(field)
#field = Field(tag = '856', indicators = [' ',' '], subfields = ['4', 'N', 'y','online','u','https://nic.cz'])
#record.add_ordered_field(field)
#field = Field(tag = '856', indicators = [' ',' '], subfields = ['4', 'N', 'y','Webarchiv'])
#record.add_ordered_field(field)

#print(record)
#validate(record)

try:
	csv_260a = open('260a.txt', 'a', 0)
	csv_260b = open('260b.txt', 'a', 0)
	csv_264a = open('264a.txt', 'a', 0)
	csv_264b = open('264b.txt', 'a', 0)
	csv_773t = open('773t.txt', 'a', 0)
	csv_773x = open('773x.txt', 'a', 0)
except:
	print('CSV: Read only FS exiting.')
	exit(1)

marcxml.map_xml(validate, DATA)

csv_260a.close()
csv_260b.close()
csv_264a.close()
csv_264b.close()
csv_773t.close()
csv_773x.close()

# EXIT -------------------

sys.exit(0)

