#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Aleph MARC 773 -> 856 convertor
#
#    ID                                                  R           D  M      S	
# 001821821 7730 L $$tRudé právo$$x0032-6569$$gRoč. 30, 1950, č. 55, 5. 3., s. 5$$q30:55<5$$919500305
#    ID                       
# XXXXXXXXX 85641 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
#                                                    R   M D S
# http://archiv.ucl.cas.cz/index.php?path=RudePravo/1950/3/5/5.png
#

from __future__ import print_function

import StringIO,requests,sys,os,re

from oaipmh.client import Client
from oaipmh.metadata import MetadataRegistry
from pymarc import marcxml,Field
from lxml.etree import tostring

# VAR ----------------------------------

IN='data.txt'
OUT='773to856_RP.bib'
LOG='773to856_RP.log'

PREFIX='http://archiv.ucl.cas.cz/index.php?path=RudePravo/'
URL='https://aleph.lib.cas.cz/OAI'

TOTAL=0
MATCH=0
ATT=0
MAN=0

# DEF ----------------------------------

def MarcXML(xml):
	handler = marcxml.XmlHandler()
	marcxml.parse_xml(StringIO.StringIO(tostring(xml, encoding='utf-8')), handler)
	return handler.records[0]

def url_response(url,i,log):
	try:
		req = session.get(url)
		if req.status_code == 200:
			if 'Tisk' in req.text:
				return 1
	except:
		log.write(i + ' URL check failed.\n')

def write_record(bib,url,i,log):
	try:
		#oai:aleph22.lib.cas.cz:KNA01-001394011
		record,header,about='','',''
		header, record, about = oai.getRecord(metadataPrefix='marc21', identifier='oai:aleph22.lib.cas.cz:KNA01-' + i)
		if record:
			if '856' in record:
				log.write(i + ' Has 856.\n')
			else:
				# XXXXXXXXX 85642 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
				field = Field(
					tag = '856',
					indicators = ['4','1'],
					subfields = ['u', url, 'y', u'Digitální archiv časopisů', '4', 'N']
				)
				record.add_ordered_field(field)
				bib.write(record.__str__())
				bib.write('\n')
		else:
			log.write(i + ' No record.\n')
	except:
		log.write(i + ' Write failed.\n')

def convert_regular(g,i,out,log):
	Y = re.sub('^[Rr]oč\. (\d+|\[\d+\]), (\d+), .*$', '\\2', g).strip()
	D = re.sub('^[Rr]oč\. (\d+|\[\d+\]), \d+, č\. \d+, (\d+)\. \d+\., .*$', '\\2', g).strip()
	M = re.sub('^[Rr]oč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. (\d+)\., .*$', '\\2', g).strip()
	s_part = re.sub('^.*, s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', '\\1', g)
	S = s_part.strip('.').strip('[').strip(']').split(',')[0].split('-')[0].split('a')[0].strip()

	if Y in [str(y) for y in range(1950,1990)]:

		URL = PREFIX + Y + '/' + M + '/' + D + '/' + S + '.png'

		if url_response(URL,i,log):
			write_record(out,URL,i,log)
		else:
			log.write(i + ' BAD ' + URL + ' => ' + g)
	else:
		log.write(i + ' YEAR ' + g)

def convert_att(g,i,out,log):
	Y = re.sub('^Roč\. \d+, (\d+), .*$', '\\1',g).strip()
	D = re.sub('^Roč\. \d+, \d+, č\. \d+, (\d+)\. \d+\., .*$', '\\1', g).strip()
	M = re.sub('^Roč\. \d+, \d+, č\. \d+, \d+\. (\d+)\., .*$', '\\1', g).strip()
	S = re.sub('^.*, (příl\.|[Pp]říloha), s\. (\d+|\d+-\d+)$', '\\2', g).split('-')[0].strip()

	if Y in [str(y) for y in range(1950,1990)]:

		URL = PREFIX + Y + '/' + M + '/' + D + '/' + S + '_.png'

		if url_response(URL,i,log):
			write_record(out,URL,i,log)
		else:
			log.write(i + ' BAD ' + URL + ' => ' + g)
	else:
		log.write(i + ' YEAR ' + g)

# INIT ----------------------------------

registry = MetadataRegistry()

registry.registerReader('marc21', MarcXML)

oai = Client(URL, registry)

session = requests.Session()

# MAIN ----------------------------------

in_file = open(IN, 'r')
out_file = open(OUT, 'w')
log_file = open(LOG, 'w', 0)

for LINE in in_file:
	if re.match('.*L \$\$tRudé právo\$\$x0032-6569\$\$.*', LINE):
		TOTAL+=1
		ID = LINE[:9]

		G = re.sub('^.*\$\$g(.*)\$\$q.*$', '\\1', LINE)
		Q = re.sub('^.*\$\$q(.*)\$\$.*$', '\\1', LINE)
		# REGULAR
		if re.match('^[Rr]oč\. (\d+|\[\d+\]), \d+, č\. \d+, \d+\. \d+\., s\. (\d+\.?|\[\d+\]\.?|\d+, \d+|\d+-\d+|\d+ a \d+)$', G):
			MATCH+=1
			convert_regular(G,ID,out_file,log_file)
			continue
		# ATT
		if re.match('^Roč\. \d+, \d+, č\. \d+, \d+\. \d+\., (příl\.|[Pp]říloha), s\. (\d+|\d+-\d+)$', G):
			ATT+=1
			convert_att(G,ID,out_file,log_file)
			continue
		# MANUAL
		MAN+=1
		#print(LINE.strip())
		log_file.write(ID + ' MANUAL ' + G)

print('TOTAL: ' + str(TOTAL))
print('MATCH: ' + str(MATCH))
print('ATT: ' + str(ATT))
print('MAN: ' + str(MAN))

in_file.close()
out_file.close()
log_file.close()

