#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Aleph MARC 773 -> 856 convertor
#
# Kulturni politika
#                                                         R        Y        C                   S
# 001924275 7730  L $$tKulturní politika$$x2336-1247$$gRoč. 2, 1946/1947, č. 52, 12. 9. 1947, s. 3$$q2:52<3$$919470912
#                                                   Y  C S
# http://archiv.ucl.cas.cz/index.php?path=KulP/2.1946-1947/10/3.png
#    ID                  URL      
# XXXXXXXXX 85641 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
#

from __future__ import print_function

import StringIO,requests,sys,os,re

from oaipmh.client import Client
from oaipmh.metadata import MetadataRegistry
from pymarc import marcxml,Field
from lxml.etree import tostring

# VAR ----------------------------------

IN='data.txt'
OUT='773to856_KULP.bib'
LOG='773to856_KULP.log'

PREFIX='http://archiv.ucl.cas.cz/index.php?path=KulP/'
URL='https://aleph.lib.cas.cz/OAI'

TOTAL=0
MATCH=0
BROKEN=0
MAN=0

# DEF ----------------------------------

def MarcXML(xml):
	handler = marcxml.XmlHandler()
	marcxml.parse_xml(StringIO.StringIO(tostring(xml, encoding='utf-8')), handler)
	return handler.records[0]

def url_response(url,i,log):
	try:
		req = session.get(url)
		if req.status_code == 200:
			if 'Tisk' in req.text:
				return 1
	except:
		log.write(i + ' URL check failed.\n')

def write_record(bib,url,i,log):
	try:
		#oai:aleph22.lib.cas.cz:KNA01-001394011
		record,header,about='','',''
		header, record, about = oai.getRecord(metadataPrefix='marc21', identifier='oai:aleph22.lib.cas.cz:KNA01-' + i)
		if record:
			if '856' in record:
				log.write(i + ' Has 856.')
			else:
				# XXXXXXXXX 85642 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
				field = Field(
					tag = '856',
					indicators = ['4','1'],
					subfields = ['u', url, 'y', u'Digitální archiv časopisů', '4', 'N']
				)
				record.add_ordered_field(field)
				bib.write(record.__str__())
				bib.write('\n')
		else:
			log.write(i + ' No record.\n')
	except:
		log.write(i + ' Write failed.\n')

def convert_q(q,g,i,out,log):
	R = re.sub('(\d+):(\d+|\d+\/\d+)<\d+', '\\1', q).strip()
	C = re.sub('\d+:(\d+|\d+\/\d+)<\d+', '\\1', q).strip().split('/')
	S = re.sub('\d+:(\d+|\d+\/\d+)<(\d+)', '\\2', q).strip()

	if R == '1': R = '1.1945-1946'
	if R == '2': R = '2.1946-1947'
	if R == '3': R = '3.1947-1948'
	if R == '4': R = '4.1949'

	if len(C) == 1:
		URL = PREFIX + R + '/' + C[0].strip() + '/' + S + '.png'
	if len(C) == 2:
		URL = PREFIX + R + '/' + C[0].strip() + '-' + C[1].strip() + '/' + S + '.png'

	if url_response(URL,i,log):
		write_record(out,URL,i,log)
	else:
		log.write(i + ' BAD ' + URL + ' => ' + g)

def convert_broken(g,i,out,log):
	R = re.sub('^Roč\. \d+, (\d+/\d+), .*$', '\\1', g).strip().split('/')
	C = re.sub('^Roč\. \d+, \d+/\d+, č\. (\d+|\d+\/\d+), .*$', '\\1', g).strip().split('/')
	s_part = re.sub('^.*, s\. (\d+|\d+ a \d+|\d+, \d+|\d+-\d+)$', '\\1', g)
	S = s_part.split(' a ')[0].split(', ')[0].split('-')[0].strip()

	if R[0] == '1945': R = '1.1945-1946'
	if R[0] == '1946': R = '2.1946-1947'
	if R[0] == '1947': R = '3.1947-1948'
	if R[0] == '1949': R = '4.1949'

	if len(C) == 1:
		URL = PREFIX + R + '/' + C[0].strip() + '/' + S + '.png'
	if len(C) == 2:
		URL = PREFIX + R + '/' + C[0].strip() + '-' + C[1].strip() + '/' + S + '.png'

	if url_response(URL,i,log):
		write_record(out,URL,i,log)
	else:
		log.write(i + ' BAD ' + URL + ' => ' + g)
	
# INIT ----------------------------------

registry = MetadataRegistry()

registry.registerReader('marc21', MarcXML)

oai = Client(URL, registry)

session = requests.Session()

# MAIN ----------------------------------

in_file = open(IN, 'r')
out_file = open(OUT, 'w')
log_file = open(LOG, 'w', 0)

for LINE in in_file:
	if re.match('.*L \$\$tKulturní politika\$\$x2336-1247\$\$.*', LINE):
		TOTAL+=1
		ID = LINE[:9]
		G = re.sub('^.*\$\$g(.*)\$\$q.*$', '\\1', LINE)
		Q = re.sub('^.*\$\$q(.*)\$\$.*$', '\\1', LINE)
		# Q
		if re.match('\d+:(\d+|\d+\/\d+)<\d+', Q):
			MATCH+=1
			convert_q(Q,G,ID,out_file,log_file)
			continue
		# BROKEN
		if re.match('^Roč\. \d+, \d+/\d+, č\. (\d+|\d+\/\d+), \d+\. \d+\. \d+, s\. (\d+|\d+ a \d+|\d+, \d+|\d+-\d+)$', G):
			BROKEN+=1
			convert_broken(G,ID,out_file,log_file)
			continue
		# MAN
		MAN+=1
		log_file.write(ID + ' MANUAL ' + G)
		#print(LINE.strip())

print('TOTAL: ' + str(TOTAL))
print('MATCH: ' + str(MATCH))
print('BROKEN: ' + str(BROKEN))
print('MAN: ' + str(MAN))

in_file.close()
out_file.close()
log_file.close()

