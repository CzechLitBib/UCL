#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Aleph MARC 773 -> 856 convertor
#
# Literarni noviny
#                                                        R       Y    C            S
# 001965093 7730  L $$tLiterární noviny$$x1804-820X$$gRoč. 20, 1951, č. 5, 5. 5., s. 70$$q20:5<70$$919510505
#                                              R  Y   C S
# http://archiv.ucl.cas.cz/index.php?path=LitN/2.1928/1/1.png
#    ID                  URL      
# XXXXXXXXX 85641 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
#

from __future__ import print_function

import StringIO,requests,sys,os,re

from oaipmh.client import Client
from oaipmh.metadata import MetadataRegistry
from pymarc import marcxml,Field
from lxml.etree import tostring

# VAR ----------------------------------

IN='773.txt'
OUT='773to856.bib'
LOG='773to856.log'

PREFIX='http://archiv.ucl.cas.cz/index.php?path=LitN/'
URL='https://aleph.lib.cas.cz/OAI'

TOTAL=0
MATCH=0
MANUA=0

# DEF ----------------------------------

def MarcXML(xml):
	handler = marcxml.XmlHandler()
	marcxml.parse_xml(StringIO.StringIO(tostring(xml, encoding='utf-8')), handler)
	return handler.records[0]

def url_response(url,i,log):
	try:
		req = session.get(url)
		if req.status_code == 200:
			if 'Tisk' in req.text:
				return 1
	except:
		log.write(i + ' URL check failed.\n')
	log.write(i + ' BAD ' + url + '\n')
	return 0

def write_record(bib,url,i,log):
	try:
		#oai:aleph22.lib.cas.cz:KNA01-001394011
		record,header,about='','',''
		header, record, about = oai.getRecord(metadataPrefix='marc21', identifier='oai:aleph22.lib.cas.cz:KNA01-' + i)
		if record:
			# XXXXXXXXX 85642 L $$ uYYY $$y Digitální archiv časopisů $$ 4 N
			field = Field(
				tag = '856',
				indicators = ['4','1'],
				subfields = ['u', url, 'y', u'Digitální archiv časopisů', '4', 'N']
			)
			record.add_ordered_field(field)
			# =651 \\$aDGARCH
			field = Field(
				tag = '651',
				indicators = [' ',' '],
				subfields = ['a', 'DGARCH']
			)
			record.add_ordered_field(field)
			bib.write(record.__str__())
			bib.write('\n')
		else:
			log.write( i + 'No record.\n')
	except:
		log.write(i + ' Write failed.\n')

def convert_regular_double(g,i,out,log):
	Y = re.sub('^Roč\. \d+, (\d+), č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\1', g).strip()
	R = re.sub('^Roč\. (\d+), \d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\1', g).strip()
	C = re.sub('^Roč\. \d+, \d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\1', g).split('/')
	s_part = re.sub('^Roč\. \d+, \d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\3', g)
	S = s_part.split('-')[0].split(', ')[0].strip()

	#double
	if len(C) == 2:
		C = C[0].strip() + '-' + C[1].strip()
	else: C = C[0].strip()
	#index
	if Y in ('1928'):
		if int(C) >= 18:
			C = C.strip() + '(' + str(int(C) - 17) + ')'
	if Y in ('1929'):
		C = C.strip() + '(' + str(int(C) + 40) + ')'
	if Y in ('1930'):
		C = C.strip() + '(' + str(int(C) + 63) + ')'
	#year
	if Y in ('1950','1951'):
		URL = PREFIX + Y  + '/' + C + '/' + S + '.png'
	else:
		URL = PREFIX + R + '.' + Y + '/' + C + '/' + S + '.png'

	if url_response(URL,i,log):
		write_record(out,URL,i,log)

def convert_double_year_double(g,i,out,log):
	Y = re.sub('^Roč\. \d+, (\d+\/\d+), č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\1', g).split('/')
	R = re.sub('^Roč\. (\d+), \d+\/\d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\1', g).strip()
	C = re.sub('^Roč\. \d+, \d+\/\d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\1', g).split('/')
	s_part = re.sub('^Roč\. \d+, \d+\/\d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', '\\3', g)
	S = s_part.split('-')[0].split(', ')[0].strip()

	#double
	if len(Y) == 2:
		Y = Y[0].strip() + '-' + Y[1].strip()
	else: Y = Y[0].strip()
	if len(C) == 2:
		C = C[0].strip() + '-' + C[1].strip()
	else: C = C[0].strip()

	URL = PREFIX + R + '.' + Y + '/' + C + '/' + S + '.png'

	if url_response(URL,i,log):
		write_record(out,URL,i,log)

def convert_no_year_double(g,q,i,out,log):
	Y = re.sub('^Roč\. (\d+), č\. (\d+\/\d+|\d+), s\. (\d+|\d+-|\d+, ).*$', '\\1', g).strip()
	C = re.sub('^Roč\. \d+, č\. (\d+\/\d+|\d+), s\. (\d+|\d+-|\d+, ).*$', '\\1', g).split('/')
	R = re.sub('(\d+):.*', '\\1', q).strip()
	s_part = re.sub('^Roč\. \d+, č\. (\d+\/\d+|\d+), s\. (\d+|\d+-|\d+, ).*$', '\\2', g)
	S = s_part.split('-')[0].split(', ')[0].strip()
	#double
	if len(C) == 2:
		C = C[0].strip() + '-' + C[1].strip()
	else: C = C[0].strip()
	#year
	if Y in ('1950','1951'):
		URL = PREFIX + Y + '/' + C + '/' + S + '.png'
	else:
		URL = PREFIX + R + '.' + Y + '/' + C + '/' + S + '.png'

	if url_response(URL,i,log):
		write_record(out,URL,i,log)

# INIT ----------------------------------

registry = MetadataRegistry()

registry.registerReader('marc21', MarcXML)

oai = Client(URL, registry)

session = requests.Session()

# MAIN ----------------------------------

in_file = open(IN, 'r')
out_file = open(OUT, 'w')
log_file = open(LOG, 'w', 0)

for LINE in in_file:
	if re.match('.*L \$\$tLiterární noviny\$\$(x1804-820X\$\$g|g).*', LINE):
		TOTAL+=1
		ID = LINE[:9]
		G = re.sub('^.*\$\$g(.*)\$\$q.*$', '\\1', LINE)
		Q = re.sub('^.*\$\$q(.*)\$\$.*$', '\\1', LINE)

		# REGULAR + DOUBLE
		# 001965093 7730  L $$tLiterární noviny$$x1804-820X$$gRoč. 20, 1951, č. 5, 5. 5., s. 70$$q20:5<70$$919510505
		# Roč. 20, 1951, č. 5, 5. 5., s. 70
		if re.match('^Roč\. \d+, \d+, č\. (\d+\/\d+|\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', G):
			MATCH+=1
			convert_regular_double(G,ID,out_file,log_file)
			continue
		# DOUBLE YEAR + DOUBLE
		if re.match('^Roč\. \d+, \d+\/\d+, č\. (\d+|\d+\/\d+), (.*, )?s\. (\d+|\d+-|\d+, ).*$', G):
			MATCH+=1
			convert_double_year_double(G,ID,out_file,log_file)
			continue
		# NO YEAR + DOUBLE
		if re.match('^Roč\. \d+, č\. (\d+\/\d+|\d+), s\. (\d+|\d+-|\d+, ).*$', G):
			MATCH+=1
			convert_no_year_double(G,Q,ID,out_file,log_file)
			continue
		#MANUAL
		MANUA+=1
		#print(LINE.strip())
		continue

#print('TOTAL: ' + str(TOTAL))
#print('MATCH: ' + str(MATCH))
#print('MANUA: ' + str(MANUA))

in_file.close()
out_file.close()
log_file.close()

