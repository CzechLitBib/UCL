#!/usr/bin/python3
#
# Create Devel DB 
#

import sqlite3

DB='devel.db'

con = sqlite3.connect(DB)
cur = con.cursor()

# DAILY
cur.execute("CREATE TABLE daily (timestamp INTEGER, ident TEXT, user TEXT, tag TEXT, code TEXT);")
cur.execute("CREATE INDEX 'daily_code' ON daily (timestamp,ident,code);")
# WEEKLY
cur.execute("CREATE TABLE weekly (timestamp INTEGER, ident TEXT, user TEXT, tag TEXT, code TEXT);")
cur.execute("CREATE INDEX 'weekly_code' ON weekly (timestamp,ident,code);")

# ERROR
cur.execute("CREATE TABLE error (code TEXT UNIQUE, label TEXT, text TEXT);")

# COUNTRY
cur.execute("CREATE TABLE country (code TEXT UNIQUE);")
# LANGUAGE
cur.execute("CREATE TABLE language (code TEXT UNIQUE);")
# ROLE
cur.execute("CREATE TABLE role (code TEXT UNIQUE);")

# REVIEW
cur.execute("CREATE TABLE review (authority TEXT UNIQUE, name TEXT);")
# USER
cur.execute("CREATE TABLE user (code TEXT UNIQUE, aleph TEXT, email TEXT);")
# EXCEPTION
cur.execute("CREATE TABLE exception (code TEXT, ident TEXT);")
cur.execute("CREATE UNIQUE INDEX 'exception_code' ON exception (code,ident);")

# DICT 260/264a
cur.execute("CREATE TABLE dict_26XA (value TEXT UNIQUE);")
# DICT 260/264b
cur.execute("CREATE TABLE dict_26XB (value TEXT UNIQUE);")
# DICT 490a
cur.execute("CREATE TABLE dict_490 (value TEXT UNIQUE);")
# DICT 773
cur.execute("CREATE TABLE dict_773 (value TEXT UNIQUE);")
# DICT 336
cur.execute("CREATE TABLE dict_336 (value TEXT UNIQUE);")
# DICT 337
cur.execute("CREATE TABLE dict_337 (value TEXT UNIQUE);")
# DICT 338
cur.execute("CREATE TABLE dict_338 (value TEXT UNIQUE);")

# GROUP
cur.execute("CREATE TABLE 'access_group' (name TEXT UNIQUE);")
# MODULE
cur.execute("CREATE TABLE 'module' (name TEXT UNIQUE, desciption TEXT);")
# USER_GROUP
cur.execute("CREATE TABLE 'user_group' (user TEXT UNIQUE, access_group TEXT);")
# MODULE_GROUP
cur.execute("CREATE TABLE 'module_group' (module TEXT, access_group TEXT, UNIQUE(module,access_group));")

# EMAIL
cur.execute("CREATE TABLE 'email' (username TEXT, passwd TEXT, server TEXT);")

con.commit()
con.close()

