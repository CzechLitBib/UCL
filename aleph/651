#!/usr/bin/python
# -*- coding: utf-8 -*-

# INCLUDE -------------------

from __future__ import print_function

import StringIO,lxml.html,time,sys,os,re

from pymarc import marcxml

# VAR -------------------

IN='651.txt'
XML='ucla.xml'
OUT='651.aleph'

# MAP -----------

MAP={}

with open(IN, 'r') as src:
	for line in src:
		DATA=[]
		orig,raw = line.strip().split(';;;')
		if not raw: break
		field = raw.split('|')
		if not '151' in field[0]: break
		for R in field[1:]:
			DATA.append(R[0])
			DATA.append(R[1:].strip())
		MAP[orig.replace('OPRAVA UCL','').strip()] = DATA

# PARSE / WRITE ----------

aleph = open(OUT, 'w')

def validate(record):

	metadata = record

	IDENT = metadata['001'].value()

	if '651' in metadata:
		MOD=False
		for F in metadata.get_fields('651'):
			if F['a'].encode('utf-8') in MAP:
				MOD=True
				break
		if MOD:
			for F in metadata.get_fields('651'):
				VAL=F['a'].encode('utf-8')
				if VAL in MAP:
					SUB=''
					for i in range(0, len(MAP[VAL])/2):
						SUB+='$$' +  MAP[VAL][i*2] +  MAP[VAL][i*2+1]
					SUB+='$$2czenas'
					aleph.write(str(IDENT + ' 651 7 L ') + SUB + '\n')
				else:
					SUB=''
					for i in range(0, len(F.subfields)/2):
						SUB+='$$' + F.subfields[i*2] + F.subfields[i*2+1]
					aleph.write(str(IDENT + ' 651' + F.indicator1 + F.indicator2 + ' L ') + SUB.encode('utf-8')+ '\n')

# MAIN ------------------------------------------------------

marcxml.map_xml(validate,XML)

aleph.close()

# EXIT -------------------

sys.exit(0)

